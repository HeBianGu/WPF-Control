<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Form">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/Form.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/SelectSourcePropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/IEnumerablePropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/TextPropertyViewItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/TextPropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/EnumPropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/DateTimePropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/BoolPropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/CommandPropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/PropertyItem/ComboBoxRepositoryPropertyItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Controls.Form;component/FormPresenter.xaml" />
    </ResourceDictionary.MergedDictionaries>

  

    <!--<DataTemplate x:Key="S.DataTemplate.TextPropertyItem.Weight" DataType="{x:Type local:TextPropertyItem}">
        <TextBox IsReadOnly="{Binding ReadOnly}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
    </DataTemplate>-->

    <DataTemplate DataType="{x:Type local:ColorPropertyItem}">

        <!--<h:ComboSelector Grid.Column="2"
                             h:Cattach.UseTitle="False"
                             IsEnabled="{Binding ReadOnly, Converter={x:Static h:Converter.GetTrueToFalse}}"
                             SelectedItem="{Binding Value}">
                <h:ComboSelector.Control>
                    <ListBox h:Cattach.ItemMinHeight="20"
                             h:Cattach.ItemPadding="0"
                             Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                             ItemsSource="{h:GetColorMarkup MethodName=GetAvailableColors}"
                             SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=h:ComboSelector}, Path=SelectedItem, Mode=TwoWay}"
                             Style="{DynamicResource {x:Static h:ListBoxKeys.Clear}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="8" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Background="Transparent">
                                    <Border Margin="2" CornerRadius="2" Style="{DynamicResource {x:Static h:BorderKeys.CardBorderBrush}}">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding}" />
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </h:ComboSelector.Control>
                <h:ComboSelector.SelectedTemplate>
                    <DataTemplate>
                        <Border Height="20">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding}" />
                            </Border.Background>
                        </Border>
                    </DataTemplate>
                </h:ComboSelector.SelectedTemplate>
            </h:ComboSelector>-->
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:BrushPropertyItem}">
        <!--<h:ComboSelector Grid.Column="2" h:Cattach.UseTitle="False" SelectedItem="{Binding Value, Mode=TwoWay}">
                <h:ComboSelector.Control>
                    <ListBox h:Cattach.ItemMinHeight="20"
                             h:Cattach.ItemPadding="0"
                             Background="{DynamicResource {x:Static h:BrushKeys.BackgroundDefault}}"
                             ItemsSource="{h:GetColorMarkup MethodName=GetAvailableColors}"
                             SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=h:ComboSelector}, Path=SelectedItem, Converter={x:Static h:Converter.GetSolidColorBrushToColor}, Mode=TwoWay}"
                             Style="{DynamicResource {x:Static h:ListBoxKeys.Clear}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="8" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Background="Transparent">
                                    <Border Margin="2" CornerRadius="2" Style="{DynamicResource {x:Static h:BorderKeys.CardBorderBrush}}">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding}" />
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </h:ComboSelector.Control>
                <h:ComboSelector.SelectedTemplate>
                    <DataTemplate>
                        <Border Height="20" Background="{Binding}" />
                    </DataTemplate>
                </h:ComboSelector.SelectedTemplate>
            </h:ComboSelector>-->
    </DataTemplate>



    <!--  IEnumerablePropertyItem样式已修改参考该样式  -->
    <DataTemplate DataType="{x:Type local:PrimitivesPropertyItem}">
        <Grid Visibility="{Binding Visibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Expander Background="Transparent">
                <Expander.Header>
                    <DockPanel Margin="1,0,0,0" HorizontalAlignment="Stretch" LastChildFill="False">
                        <TextBlock>
                            <Run Text="{Binding Name}" />
                            <Run Text="[" />
                            <Run Text="{Binding Value.Count, Mode=OneWay}" />
                            <Run Text="]" />
                        </TextBlock>
                        <TextBlock DockPanel.Dock="Right" Style="{StaticResource S.TextBlock.Error}" />
                    </DockPanel>
                </Expander.Header>
                <!--<h:Cattach.CaptionRightTemplate>
                    <ControlTemplate>
                        <Button
                                Command="{Binding AddCommand}"
                                Style="{DynamicResource {x:Static h:ButtonKeys.AddCircle}}"
                                Visibility="{Binding ReadOnly, Converter={x:Static h:Converter.GetTrueToCollapsed}}" />
                    </ControlTemplate>
                </h:Cattach.CaptionRightTemplate>-->

                <ItemsControl x:Name="lb_items"
                              Margin="20,0,0,0"
                              BorderThickness="5,0,0,0"
                              IsEnabled="{Binding ReadOnly, Converter={x:Static h:Converter.GetTrueToFalse}}"
                              ItemsSource="{Binding Value}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <DockPanel LastChildFill="True">
                                    <TextBlock Margin="0,0,0,0" VerticalAlignment="Center" Text="[" />
                                    <TextBlock VerticalAlignment="Center">
                                        <!--<h:Interaction.Behaviors>
                                            <h:ItemsControlItemIndexBehavior />
                                        </h:Interaction.Behaviors>-->
                                    </TextBlock>
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Text="]" />
                                    <Button DockPanel.Dock="Right" Visibility="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ReadOnly, Converter={x:Static h:Converter.GetTrueToCollapsed}}">
                                        <!--<h:Interaction.Triggers>
                                            <h:EventTrigger EventName="Click">
                                                <h:CloseItemsAction Item="{Binding RelativeSource={RelativeSource AncestorType=ContentControl, AncestorLevel=2}}" ItemsControl="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
                                            </h:EventTrigger>
                                        </h:Interaction.Triggers>-->
                                        <!--<h:Interaction.Behaviors>
                                            <h:RemoveItemVisualTreeButtonBehavior/>
                                        </h:Interaction.Behaviors>-->
                                    </Button>
                                    <TextBox Width="Auto" HorizontalAlignment="Stretch" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <!--<h:Interaction.Triggers>
                                            <h:EventTrigger EventName="TextChanged">
                                                <h:CallMethodAction MethodName="RefreshValue" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext}" />
                                            </h:EventTrigger>
                                        </h:Interaction.Triggers>-->
                                    </TextBox>
                                </DockPanel>

                                <Grid Grid.Column="1" Width="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=MessageWidth}">
                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="14"
                                               Foreground="Red"
                                               Text="&#xe626;"
                                               TextTrimming="CharacterEllipsis"
                                               ToolTip="{Binding Message}" />
                                    <!--  Visibility="{Binding Message, Converter={x:Static h:XConverter.VisibilityWithOutStringConverter}, ConverterParameter={x:Null}, Mode=TwoWay}" />  -->
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Expander>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Value.Count, Mode=OneWay}" Value="0">
                <Setter TargetName="lb_items" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ObjectPropertyItem}">
        <Grid Visibility="{Binding Visibility}">
            <Expander Padding="0" Background="Transparent">
                <Expander.Header>
                    <TextBlock>
                        <Run Text="{Binding Name}" />
                        <!--<Run Text="  [" />
                        <Run Text="{Binding PropertyInfo.PropertyType.Name, Mode=OneWay}" />
                        <Run Text="]" />-->
                    </TextBlock>
                </Expander.Header>

                <local:Form Margin="0,0,0,0"
                            MessageWidth="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseBoolen}"
                            SelectObject="{Binding Value}"
                            UseArray="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseArray}"
                            UseBoolen="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseBoolen}"
                            UseClass="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseClass}"
                            UseDateTime="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseDateTime}"
                            UseDeclaredOnly="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseDeclaredOnly}"
                            UseDisplayOnly="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseDisplayOnly}"
                            UseEnum="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseEnum}"
                            UseEnumerator="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseGroup}"
                            UseGroup="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseGroupNames}"
                            UseGroupNames="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseGroupNames}"
                            UseInterface="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseInterface}"
                            UseNull="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseNull}"
                            UsePresenter="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UsePresenter}"
                            UsePrimitive="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UsePrimitive}"
                            UsePropertyNames="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UsePropertyNames}"
                            UsePropertyView="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UsePropertyView}"
                            UseString="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseString}"
                            UseTypeConverter="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=UseTypeConverter}"
                            UseTypeConverterOnly="{Binding RelativeSource={RelativeSource AncestorType=local:Form}, Path=TypeConverterOnly}" />
            </Expander>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:PresenterPropertyItem}">
        <ContentPresenter VerticalAlignment="Center" Content="{Binding Value}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:DictionaryPropertyViewItem}">
        <Expander Padding="0" Header="{Binding Name}" IsExpanded="False">
            <ItemsControl ItemsSource="{Binding Value}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Visibility="{Binding Visibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Key}" />
                            <TextBlock Grid.Column="2"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{Binding Value}"
                                       TextWrapping="Wrap"
                                       ToolTip="{Binding Value}" />
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Expander>
    </DataTemplate>
</ResourceDictionary>
