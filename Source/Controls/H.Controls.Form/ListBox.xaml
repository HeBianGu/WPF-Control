<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Form">


    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/ListBoxItem.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.General.WpfControlLib;component/Custom/System/ListBox.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <!--<Style x:Key="S.ListBoxItem.All.PropertyGrid" BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Single}}" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="Transparent">
                        <Border x:Name="boder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" />

                        <Border x:Name="boder_mouseover"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.MouseOverBackground)}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Opacity="0" />

                        <Border x:Name="boder_selected"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.SelectBackground)}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Opacity="0" />

                        <DockPanel>
                            <CheckBox Content="选择" DockPanel.Dock="Left" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" />

                            <Button Height="30" DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}">
                                <h:Interaction.Behaviors>
                                    <h:RemoveItemButtonBehavior Item="{Binding}" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=ItemsSource}" />
                                </h:Interaction.Behaviors>
                            </Button>


                            <Button Height="30" DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:ButtonKeys.Edit}}">
                                <h:Interaction.Behaviors>
                                    <local:EditItemWithPropertyGridButtonBehavior Title="编辑" Item="{Binding}" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=ItemsSource}" />
                                </h:Interaction.Behaviors>
                            </Button>



                            <Button Height="30" DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:ButtonKeys.Detial}}">
                                <h:Interaction.Behaviors>
                                    <local:DetialItemWithPropertyGridButtonBehavior Title="详情" Item="{Binding}" />
                                </h:Interaction.Behaviors>
                            </Button>
                            <ContentPresenter />
                        </DockPanel>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.MouseOverForeground)}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_mouseover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(h:Cattach.SelectForeground)}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_selected"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="{x:Static h:StoryboardSetting.DesiredFrameRate}">
                                        <DoubleAnimation Storyboard.TargetName="boder_selected"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="h:Cattach.IsDragEnter" Value="true">
                            <Setter TargetName="boder" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                            <Setter TargetName="boder" Property="BorderThickness" Value="0,1,0,0" />
                            <Setter TargetName="boder" Property="CornerRadius" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.ListBox.All.PropertyGrid" BasedOn="{StaticResource {x:Static h:ListBoxKeys.CheckAll}}" TargetType="ListBox">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource S.ListBoxItem.All.PropertyGrid}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                            <CheckBox Content="全选">
                                <h:Interaction.Behaviors>
                                    <h:ListBoxSelectAllCheckBoxBehavior ListBox="{Binding RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                </h:Interaction.Behaviors>
                            </CheckBox>

                            <Button Content="添加" DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:ButtonKeys.Add}}">
                                <h:Interaction.Behaviors>
                                    <local:AddItemWithPropertyGridButtonBehavior Title="添加" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ItemsSource}" />
                                </h:Interaction.Behaviors>
                            </Button>

                            <Button Content="清空" DockPanel.Dock="Right" Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}">
                                <h:Interaction.Behaviors>
                                    <h:ClearItemButtonBehavior ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ItemsSource}" />
                                </h:Interaction.Behaviors>
                            </Button>

                            <Button Content="删除选中" Style="{DynamicResource {x:Static h:ButtonKeys.Delete}}">
                                <h:Interaction.Behaviors>
                                    <h:RemoveAllCheckedItemButtonBehavior ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ItemsSource}" ListBox="{Binding RelativeSource={RelativeSource AncestorType=ListBox}}" />
                                </h:Interaction.Behaviors>
                            </Button>
                        </DockPanel>

                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>-->
</ResourceDictionary>