<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:lc="clr-namespace:H.Controls.Dock.Controls"
                    xmlns:lcv="clr-namespace:H.Controls.Dock.Converters"
                    xmlns:ll="clr-namespace:H.Controls.Dock.Layout"
                    xmlns:local="clr-namespace:H.Controls.Dock"
                    xmlns:lp="clr-namespace:H.Controls.Dock.Properties"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell">

    <Style x:Key="{x:Type lc:LayoutAnchorableFloatingWindowControl}"
           TargetType="{x:Type lc:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}"
                                    CornerRadius="3,3,3,3"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10"
                                    ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type lc:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"
                                                   MinHeight="16" />
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Height="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}"
                                      UseLayoutRounding="True">
                                    <Grid.Background>
                                        <SolidColorBrush Color="{DynamicResource {x:Static h:ColorKeys.CaptionBackground}}" />
                                    </Grid.Background>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={lcv:BoolToVisibilityConverter}}">
                                        <lc:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ContentPresenter VerticalAlignment="Center"
                                                              Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextElement.Foreground="{DynamicResource {x:Static h:BrushKeys.CaptionForeground}}" />
                                        </lc:DropDownControlArea>
                                    </Border>


                                    <lc:DropDownButton x:Name="SinglePaneContextMenu"
                                                       Grid.Column="1"
                                                       shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                       CheckedGlyph="{x:Static FontIcons.ChevronDown}"
                                                       DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                       DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Focusable="False"
                                                       ToolTip="{x:Static lp:Resources.Anchorable_CxMenu_Hint}"
                                                       UncheckedGlyph="{x:Static FontIcons.ChevronDown}"
                                                       Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={lcv:BoolToVisibilityConverter}}">
                                        <!--<Image Source="/H.Controls.Dock;component/Themes/Generic/Images/PinMenu.png" />-->
                                    </lc:DropDownButton>

                                    <FontIconButton Grid.Column="2"
                                                    Padding="10"
                                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{x:Static FontIcons.ChromeMaximize}"
                                                    Focusable="False"
                                                    ToolTip="{x:Static lp:Resources.Window_Maximize}"
                                                    Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={lcv:InverseBoolToVisibilityConverter}}" />

                                    <FontIconButton Grid.Column="2"
                                                    Padding="10"
                                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{x:Static FontIcons.ChromeRestore}"
                                                    Focusable="False"
                                                    ToolTip="{x:Static lp:Resources.Window_Restore}"
                                                    Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={lcv:BoolToVisibilityConverter}}" />

                                    <FontIconButton x:Name="CloseButton"
                                                    Grid.Column="3"
                                                    Padding="10"
                                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{x:Static FontIcons.ChromeClose}"
                                                    Focusable="False"
                                                    ToolTip="{x:Static lp:Resources.Anchorable_BtnClose_Hint}"
                                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={lcv:BoolToVisibilityConverter}}" />
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="True">
                            <Setter TargetName="CloseButton" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="CloseButton" Property="ToolTip" Value="{x:Static lp:Resources.Document_Close}" />

                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>