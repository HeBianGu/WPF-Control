<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:lc="clr-namespace:H.Controls.Dock.Controls"
                    xmlns:lcv="clr-namespace:H.Controls.Dock.Converters"
                    xmlns:ll="clr-namespace:H.Controls.Dock.Layout"
                    xmlns:local="clr-namespace:H.Controls.Dock"
                    xmlns:lp="clr-namespace:H.Controls.Dock.Properties"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell">

    <Style TargetType="{x:Type lc:LayoutAnchorableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type lc:LayoutAnchorableControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.TabNavigation="Cycle">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header">
                                <lc:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>

                            <!--
                                Added ContentTemplate and ContentTemplateSelector
                                https://github.com/xceedsoftware/wpftoolkit/issues/1525
                            -->
                            <ContentPresenter Grid.Row="1"
                                              Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                              FlowDirection="{TemplateBinding FlowDirection}" />

                            <!--<ContentPresenter
                                FlowDirection="{TemplateBinding FlowDirection}"
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <!--
                                Hide the title if the control is directly hosted in floating window
                                The floating window control will show the title if there is only one control to host
                                without any other LayoutAnchorableControl
                            -->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--
                                Also hide the title, if model cannot be bound which can happen when using virtualization
                                See Issue #148 Drop Down Menu for LayoutAnchorables is not correct with Virtualization
                            -->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>