<local:DualPickerControlBase x:Class="H.Controls.ColorPicker.PortableColorPicker"
                             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                             xmlns:converters="clr-namespace:H.Controls.ColorPicker.Converters"
                             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                             xmlns:local="clr-namespace:H.Controls.ColorPicker"
                             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                             x:Name="uc"
                             d:DesignHeight="380"
                             d:DesignWidth="200"
                             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToInvertedBoolConverter x:Key="BoolToInvertedBoolConverter" />
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="Styles/Colors.xaml" />-->
                <ResourceDictionary Source="Styles/ColorToggleButtonStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Border Margin="0"
                Padding="0"
                Panel.ZIndex="0"
                BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrush}}"
                BorderThickness="1"
                CornerRadius="2.5"
                RenderOptions.BitmapScalingMode="NearestNeighbor">
            <Border.Background>
                <ImageBrush ImageSource="/H.Controls.ColorPicker;component/Images/transparentbg_mini.png"
                            TileMode="Tile"
                            Viewport="0,0,8,8"
                            ViewportUnits="Absolute" />
            </Border.Background>
            <ToggleButton x:Name="toggleButton"
                          Margin="0"
                          Padding="0"
                          Panel.ZIndex="1"
                          Background="{Binding Path=SelectedColor, ElementName=uc, Converter={StaticResource ColorToBrushConverter}}"
                          BorderThickness="0"
                          IsEnabled="{Binding Path=IsOpen, ElementName=popup, Converter={StaticResource BoolToInvertedBoolConverter}}"
                          Style="{StaticResource ColorToggleButtonStyle}" />
        </Border>
        <Popup Name="popup"
               IsOpen="{Binding Path=IsChecked, ElementName=toggleButton, Mode=TwoWay}"
               StaysOpen="False">
            <Border Background="{DynamicResource {x:Static BrushKeys.Background}}"
                    BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrush}}"
                    BorderThickness="1">
                <local:StandardColorPicker x:Name="test"
                                           Width="200"
                                           Height="380"
                                           ColorState="{Binding ElementName=uc, Path=ColorState, Mode=TwoWay}"
                                           HexRepresentation="{Binding ElementName=uc, Path=HexRepresentation}"
                                           HintColorState="{Binding ElementName=uc, Path=HintColorState, Mode=TwoWay}"
                                           PickerType="{Binding ElementName=uc, Path=PickerType}"
                                           SecondColorState="{Binding ElementName=uc, Path=SecondColorState, Mode=TwoWay}"
                                           ShowAlpha="{Binding ElementName=uc, Path=ShowAlpha}"
                                           ShowFractionalPart="{Binding ElementName=uc, Path=ShowFractionalPart}"
                                           SmallChange="{Binding ElementName=uc, Path=SmallChange}"
                                           UseHintColor="{Binding ElementName=uc, Path=UseHintColor, Mode=TwoWay}" />
            </Border>
        </Popup>
    </Grid>
</local:DualPickerControlBase>