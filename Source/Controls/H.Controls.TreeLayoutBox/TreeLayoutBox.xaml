<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.TreeLayoutBox"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="S.TreeLayoutBox.TreeViewItem.Base"
           BasedOn="{StaticResource {x:Type TreeViewItem}}"
           TargetType="TreeViewItem">
        <Setter Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, Path=VerticalContentAlignment}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
            </MultiTrigger>

            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.MouseOver}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="S.TreeLayoutBox.Base"
           BasedOn="{StaticResource {x:Type TreeView}}"
           TargetType="{x:Type local:TreeLayoutBox}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding Model.Name}" />
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeLayoutBox.Vertical,
                                        TypeInTargetAssembly={x:Type local:TreeLayoutBox}}"
           BasedOn="{StaticResource S.TreeLayoutBox.Base}"
           TargetType="{x:Type local:TreeLayoutBox}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource S.TreeLayoutBox.TreeViewItem.Base}"
                       TargetType="TreeViewItem">
                    <Setter Property="VerticalAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, Path=VerticalContentAlignment}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"
                                                          MinWidth="19" />
                                        <ColumnDefinition Width="Auto"
                                                          SharedSizeGroup="{Binding RelativeSource={RelativeSource AncestorType=TreeView}}" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="Border_Line"
                                            Grid.Column="0"
                                            Width="10"
                                            HorizontalAlignment="Left"
                                            BorderBrush="{DynamicResource {x:Static h:BrushKeys.Foreground}}"
                                            BorderThickness="0.5,0.5,0,0.5" />
                                    <DockPanel Grid.Column="0"
                                               Grid.ColumnSpan="2"
                                               Margin="1"
                                               VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                        <ToggleButton x:Name="Expander"
                                                      Grid.Column="2"
                                                      Margin="5,0"
                                                      ClickMode="Press"
                                                      DockPanel.Dock="Right"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Grid Width="10"
                                                                      Height="10"
                                                                      Background="Transparent">
                                                                    <Path x:Name="Collapsed"
                                                                          Margin="0"
                                                                          HorizontalAlignment="Left"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512 64.6C264.9 64.6 64.6 264.9 64.6 512c0 247.1 200.3 447.4 447.4 447.4S959.4 759.1 959.4 512c0-247.1-200.3-447.4-447.4-447.4z m233.9 524.8H589.4v156.5c0 43.2-35 78.3-78.3 78.3s-78.3-35-78.3-78.3V589.4H276.4c-43.2 0-78.3-35-78.3-78.3 0-43.2 35-78.2 78.3-78.2h156.5V276.4c0-43.2 35-78.3 78.3-78.3s78.3 35 78.3 78.3v156.5H746c43.2 0 78.3 35 78.3 78.2-0.1 43.2-35.2 78.3-78.4 78.3z"
                                                                          Fill="{TemplateBinding Foreground}"
                                                                          Stretch="Uniform" />
                                                                    <Path x:Name="Expanded"
                                                                          Margin="0"
                                                                          HorizontalAlignment="Left"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512 64.6C264.9 64.6 64.6 264.9 64.6 512c0 247.1 200.3 447.4 447.4 447.4S959.4 759.1 959.4 512c0-247.1-200.3-447.4-447.4-447.4z m312.2 446.2c0 43.3-35.1 78.3-78.3 78.3H276.5c-43.3 0-78.3-35.1-78.3-78.3 0-43.3 35.1-78.3 78.3-78.3h469.3c43.3-0.1 78.4 35 78.4 78.3z"
                                                                          Fill="{TemplateBinding Foreground}"
                                                                          Stretch="Uniform"
                                                                          Visibility="Hidden" />
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Collapsed"
                                                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                                                Value="{x:Static Visibility.Hidden}" />
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expanded"
                                                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                                                Value="{x:Static Visibility.Visible}" />
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked" />
                                                                            <VisualState x:Name="Indeterminate" />
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="1"
                                                MinHeight="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter x:Name="PART_Header"
                                                              Grid.Column="1"
                                                              Margin="10,0"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Header" />
                                        </Border>
                                    </DockPanel>
                                    <ItemsPresenter x:Name="ItemsHost"
                                                    Grid.Row="0"
                                                    Grid.Column="2"
                                                    Grid.ColumnSpan="2"
                                                    Visibility="Collapsed" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Converter={h:GetIsFirstItemInItemsControlConverter}}" Value="True">
                                        <Setter TargetName="Border_Line" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>-->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent, Converter={x:Static h:Converter.GetObjType}}"
                                                 Value="{x:Type TreeView}">
                                        <Setter TargetName="Border_Line" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Width" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Height" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeLayoutBox.Horizontal,
                                        TypeInTargetAssembly={x:Type local:TreeLayoutBox}}"
           BasedOn="{StaticResource S.TreeLayoutBox.Base}"
           TargetType="{x:Type local:TreeLayoutBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource S.TreeLayoutBox.TreeViewItem.Base}"
                       TargetType="TreeViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"
                                                       MinHeight="19" />
                                        <RowDefinition Height="Auto"
                                                       SharedSizeGroup="{Binding RelativeSource={RelativeSource AncestorType=TreeView}}" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border x:Name="Border_Line"
                                            Grid.Row="0"
                                            Height="10"
                                            VerticalAlignment="Top"
                                            BorderBrush="{DynamicResource {x:Static h:BrushKeys.Foreground}}"
                                            BorderThickness="0.5,0.5,0.5,0" />
                                    <DockPanel Grid.Row="0"
                                               Grid.RowSpan="2"
                                               Margin="1"
                                               VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                        <ToggleButton x:Name="Expander"
                                                      Grid.Column="2"
                                                      Margin="0 5"
                                                      ClickMode="Press"
                                                      DockPanel.Dock="Bottom"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Grid Width="10"
                                                                      Height="10"
                                                                      Background="Transparent">
                                                                    <Path x:Name="Collapsed"
                                                                          Margin="0"
                                                                          HorizontalAlignment="Left"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512 64.6C264.9 64.6 64.6 264.9 64.6 512c0 247.1 200.3 447.4 447.4 447.4S959.4 759.1 959.4 512c0-247.1-200.3-447.4-447.4-447.4z m233.9 524.8H589.4v156.5c0 43.2-35 78.3-78.3 78.3s-78.3-35-78.3-78.3V589.4H276.4c-43.2 0-78.3-35-78.3-78.3 0-43.2 35-78.2 78.3-78.2h156.5V276.4c0-43.2 35-78.3 78.3-78.3s78.3 35 78.3 78.3v156.5H746c43.2 0 78.3 35 78.3 78.2-0.1 43.2-35.2 78.3-78.4 78.3z"
                                                                          Fill="{TemplateBinding Foreground}"
                                                                          Stretch="Uniform" />
                                                                    <Path x:Name="Expanded"
                                                                          Margin="0"
                                                                          HorizontalAlignment="Left"
                                                                          VerticalAlignment="Center"
                                                                          Data="M512 64.6C264.9 64.6 64.6 264.9 64.6 512c0 247.1 200.3 447.4 447.4 447.4S959.4 759.1 959.4 512c0-247.1-200.3-447.4-447.4-447.4z m312.2 446.2c0 43.3-35.1 78.3-78.3 78.3H276.5c-43.3 0-78.3-35.1-78.3-78.3 0-43.3 35.1-78.3 78.3-78.3h469.3c43.3-0.1 78.4 35 78.4 78.3z"
                                                                          Fill="{TemplateBinding Foreground}"
                                                                          Stretch="Uniform"
                                                                          Visibility="Hidden" />
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Collapsed"
                                                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                                                Value="{x:Static Visibility.Hidden}" />
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expanded"
                                                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                                                Value="{x:Static Visibility.Visible}" />
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked" />
                                                                            <VisualState x:Name="Indeterminate" />
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="1"
                                                MinHeight="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter x:Name="PART_Header"
                                                              Grid.Column="1"
                                                              Margin="10,0"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Header" />
                                        </Border>
                                    </DockPanel>
                                    <ItemsPresenter x:Name="ItemsHost"
                                                    Grid.Row="2"
                                                    Grid.RowSpan="2"
                                                    Visibility="Collapsed" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Converter={h:GetIsFirstItemInItemsControlConverter}}" Value="True">
                             <Setter TargetName="Border_Line" Property="Visibility" Value="Collapsed" />
                         </DataTrigger>-->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Parent, Converter={x:Static h:Converter.GetObjType}}"
                                                 Value="{x:Type TreeView}">
                                        <Setter TargetName="Border_Line" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Width" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Height" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
   
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:TreeLayoutBox.VerticalKey}}"
           TargetType="{x:Type local:TreeLayoutBox}" />
</ResourceDictionary>
