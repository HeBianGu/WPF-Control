<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Chart2D"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Provider/LayerGroup.xaml" />
        <ResourceDictionary Source="../Marker/Marker.xaml" />
        <ResourceDictionary Source="Line.xaml" />
        <ResourceDictionary Source="Scatter.xaml" />
        <ResourceDictionary Source="Bar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Series.Default,
                                        TypeInTargetAssembly={x:Type local:Series}}"
           BasedOn="{StaticResource {x:Static h:ViewLayerGroup.DefaultKey}}"
           TargetType="{x:Type local:Series}">
        <Setter Property="yDatas" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart}, Path=yDatas}" />
        <Setter Property="xDatas" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart}, Path=xDatas}" />
        <Setter Property="LineStyle" Value="{StaticResource {x:Static h:LineBase.DefaultKey}}" />
        <Setter Property="ScatterStyle" Value="{StaticResource {x:Static h:Scatter.DefaultKey}}" />
        <Setter Property="BarStyle" Value="{StaticResource {x:Static h:Bar.DefaultKey}}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ViewLayerGroup}, Path=Foreground}" />
        <Setter Property="DisplayName" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ViewLayerGroup}, Path=DisplayName}" />
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:Series.DefaultKey}}"
           TargetType="{x:Type local:Series}" />

    <Style x:Key="{ComponentResourceKey ResourceId=S.Series.Line,
                                        TypeInTargetAssembly={x:Type local:Series}}"
           BasedOn="{StaticResource {x:Static local:Series.DefaultKey}}"
           TargetType="{x:Type local:Series}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Series}">
                    <local:LayerGroup>
                        <local:Line Data="{TemplateBinding yDatas}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{TemplateBinding LineStyle}" />
                        <local:Scatter Data="{TemplateBinding yDatas}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{TemplateBinding ScatterStyle}">
                            <local:Scatter.MarkStyle>
                                <Style BasedOn="{StaticResource {x:Static h:EllipseMarker.DefaultKey}}"
                                       TargetType="local:EllipseMarker">
                                    <Setter Property="StrokeThickness" Value="3" />
                                    <Setter Property="Fill" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundWhite}}" />
                                    <Setter Property="Rect">
                                        <Setter.Value>
                                            <Rect Width="10"
                                                  Height="10" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </local:Scatter.MarkStyle>
                        </local:Scatter>
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </local:LayerGroup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Series.Line.Polar,
                                        TypeInTargetAssembly={x:Type local:Series}}"
           BasedOn="{StaticResource {x:Static local:Series.DefaultKey}}"
           TargetType="{x:Type local:Series}">
        <Setter Property="LineStyle" Value="{StaticResource {x:Static h:PolarLine.DefaultKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Series}">
                    <local:LayerGroup>
                        <local:PolarLine Data="{TemplateBinding yDatas}"
                                         Foreground="{TemplateBinding Foreground}" />
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </local:LayerGroup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Series.Line.Smooth,
                                        TypeInTargetAssembly={x:Type local:Series}}"
           BasedOn="{StaticResource {x:Static local:Series.DefaultKey}}"
           TargetType="{x:Type local:Series}">
        <Setter Property="LineStyle" Value="{StaticResource {x:Static h:SmoothLine.DefaultKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Series}">
                    <local:LayerGroup>
                        <local:SmoothLine Data="{TemplateBinding yDatas}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Style="{TemplateBinding LineStyle}" />

                        <local:Scatter Data="{TemplateBinding yDatas}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{TemplateBinding ScatterStyle}" />

                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </local:LayerGroup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Series.Line.Area,
                                        TypeInTargetAssembly={x:Type local:Series}}"
           BasedOn="{StaticResource {x:Static local:Series.DefaultKey}}"
           TargetType="{x:Type local:Series}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Series}">
                    <local:LayerGroup>
                        <local:Area Data="{TemplateBinding yDatas}"
                                    Style="{TemplateBinding LineStyle}" />

                        <!--<local:Scatter Data="{TemplateBinding yDatas}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{TemplateBinding ScatterStyle}">
                        </local:Scatter>-->

                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </local:LayerGroup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         From="1"
                                         To="1.2"
                                         Duration="00:00:02">
                            <DoubleAnimation.EasingFunction>
                                <ElasticEase Oscillations="6"
                                             Springiness="10" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="1" To="1.1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6" Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>-->
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         From="1.2"
                                         To="1"
                                         Duration="00:00:02">
                            <DoubleAnimation.EasingFunction>
                                <ElasticEase Oscillations="6"
                                             Springiness="10" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="1.1" To="1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6" Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>-->
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Series.Bar.Basic,
                                        TypeInTargetAssembly={x:Type local:Series}}"
           BasedOn="{StaticResource {x:Static local:Series.DefaultKey}}"
           TargetType="{x:Type local:Series}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Series}">
                    <local:LayerGroup>
                        <local:Bar Data="{TemplateBinding yDatas}"
                                   Foreground="{TemplateBinding Foreground}"
                                   MarkStyle="{StaticResource {x:Static h:EllipseMarker.Default4Key}}"
                                   Style="{TemplateBinding BarStyle}" />
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </local:LayerGroup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

