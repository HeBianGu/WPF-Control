<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Chart2D"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Provider/Layer.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.BarBase.Default,
                                        TypeInTargetAssembly={x:Type local:BarBase}}"
           BasedOn="{StaticResource {x:Static h:Layer.DefaultKey}}"
           TargetType="{x:Type local:BarBase}">
        <!--<Setter Property="MarkStyle" Value="{StaticResource {x:Static h:EllipseMarker.DefaultKey}}"/>-->
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="Opacity" Value="1" />
                    <!--<Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="0.3" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->

                    <!--<Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Offset="-0.7" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->

                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,1" EndPoint="1,0">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="StrokeDashCap" Value="Round" />
                    <Setter Property="StrokeThickness" Value="1" />
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value="0,1" />
                    <!--<Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                    -->
                    <!--<Setter Property="OpacityMask">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.4"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>-->
                    <!--
                        </Trigger>
                    </Style.Triggers>-->


                    <Style.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                     From="1"
                                                     To="1.5"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6"
                                                         Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="1" To="1.1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6" Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                     From="1.5"
                                                     To="1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6"
                                                         Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="1.1" To="1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6" Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="StrokeThickness" Value="4" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="LabelStyle">
            <Setter.Value>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="WidthPercent" Value="0.8" />
        <Setter Property="SplitMilliSecond" Value="-1900" />
        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                     From="0"
                                     To="1"
                                     Duration="00:00:02">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Oscillations="6"
                                         Springiness="10" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:BarBase.DefaultKey}}"
           TargetType="{x:Type local:BarBase}" />

    <Style x:Key="{ComponentResourceKey ResourceId=S.Bar.Single,
                                        TypeInTargetAssembly={x:Type local:Bar}}"
           BasedOn="{StaticResource {x:Static h:BarBase.DefaultKey}}"
           TargetType="{x:Type local:Bar}">
        <Setter Property="IsUseAnimation" Value="False" />
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="WidthPercent" Value="1" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Bar.Default,
                                        TypeInTargetAssembly={x:Type local:Bar}}"
           BasedOn="{StaticResource {x:Static h:BarBase.DefaultKey}}"
           TargetType="{x:Type local:Bar}" />

    <Style BasedOn="{StaticResource {x:Static h:Bar.DefaultKey}}"
           TargetType="{x:Type local:Bar}" />

    <Style x:Key="{ComponentResourceKey ResourceId=S.StackBarBase.Default,
                                        TypeInTargetAssembly={x:Type local:StackBarBase}}"
           BasedOn="{StaticResource {x:Static h:BarBase.DefaultKey}}"
           TargetType="{x:Type local:StackBarBase}">
        <Setter Property="xDisplay" Value="First,Second,Thrid,Forth,Fifth" />
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:StackBarBase.DefaultKey}}"
           TargetType="{x:Type local:StackBar}" />

    <Style BasedOn="{StaticResource {x:Static h:BarBase.DefaultKey}}"
           TargetType="{x:Type local:yBar}">
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="StrokeThickness" Value="1" />
                    <!--<Setter Property="Opacity" Value="0.8" />
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="0.3" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->

                    <!--<Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="-0.7" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->

                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value="0,0" />
                    <!--<Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>-->



                    <Style.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                     From="1" To="1.5"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6" Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>-->
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="1"
                                                     To="1.5"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6"
                                                         Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                     From="1.5" To="1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6" Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>-->
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     From="1.5"
                                                     To="1"
                                                     Duration="00:00:02">
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase Oscillations="6"
                                                         Springiness="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>


                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="StrokeThickness" Value="4" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                     From="0"
                                     To="1"
                                     Duration="00:00:02">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Oscillations="6"
                                         Springiness="10" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:StackBarBase.DefaultKey}}"
           TargetType="{x:Type local:yStackBar}">
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <!--<Setter Property="Opacity" Value="0.8" />
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="0.3" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->

                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="-0.7" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="StrokeThickness" Value="1" />
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value="0,0" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                     From="0"
                                     To="1"
                                     Duration="00:00:02">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Oscillations="6"
                                         Springiness="10" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:BarBase.DefaultKey}}"
           TargetType="{x:Type local:yAnimationBar}">
        <Setter Property="yDisplay" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Chart}, Path=yDisplay}" />
        <Setter Property="PathStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="StrokeThickness" Value="1" />
                    <!--<Setter Property="Opacity" Value="0.8" />
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="White" />
                                <GradientStop Offset="0.3" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->

                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="-0.7" Color="Transparent" />
                                <GradientStop Offset="0.7" Color="White" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType=local:Layer}, Path=Foreground}" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value="0,0" />
                    <!--<Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>-->
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Timelines">
            <Setter.Value>
                <local:Timelines>
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                     From="0"
                                     To="1"
                                     Duration="00:00:02">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase Oscillations="6"
                                         Springiness="10" />
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </local:Timelines>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

