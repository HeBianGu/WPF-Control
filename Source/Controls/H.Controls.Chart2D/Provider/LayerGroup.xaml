<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Chart2D"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">


    <Style x:Key="{ComponentResourceKey ResourceId=S.LayerGroup.Default,
                                        TypeInTargetAssembly={x:Type local:LayerGroup}}"
           TargetType="{x:Type local:LayerGroup}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LayerGroup}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="h:Cattach.Behaviors">
            <Setter.Value>
                <h:Behaviors>
                    <h:LoadedAdornerBehavior AdornerType="{x:Type h:WaterMarkAdorner}" />
                </h:Behaviors>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:LayerGroup.DefaultKey}}"
           TargetType="{x:Type local:LayerGroup}" />

    <!--  用xy值范围的容器 用于绘制多坐标轴  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.ViewLayerGroup.Default,
                                        TypeInTargetAssembly={x:Type local:ViewLayerGroup}}"
           TargetType="{x:Type local:ViewLayerGroup}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ViewLayerGroup}, Path=Padding}" />

        <Setter Property="DisplayName" Value="My Group" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewLayerGroup}">

                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:ViewLayerGroup.DefaultKey}}"
           TargetType="{x:Type local:ViewLayerGroup}" />

</ResourceDictionary>

