
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.PropertyGrid">

    <local:InverseBoolConverter x:Key="InverseBoolConverter" />

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Margin="0,0,3,0"
                        Content="{Binding}"
                        Focusable="False"
                        Opacity="0.6"/>
    </DataTemplate>

    <Style x:Key="NumericUpDown"
           TargetType="{x:Type local:InputBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <local:ButtonSpinner x:Name="PART_Spinner"
                                         HorizontalContentAlignment="Stretch"
                                         VerticalContentAlignment="Stretch"
                                         AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                                         IsTabStop="False"
                                         ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}">
                        <local:WatermarkTextBox x:Name="PART_TextBox"
                                                MinWidth="20"
                                                Padding="{TemplateBinding Padding}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                AcceptsReturn="False"
                                                AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                                AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                ContextMenu="{TemplateBinding ContextMenu}"
                                                FontFamily="{TemplateBinding FontFamily}"
                                                FontSize="{TemplateBinding FontSize}"
                                                FontStretch="{TemplateBinding FontStretch}"
                                                FontStyle="{TemplateBinding FontStyle}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                Foreground="{TemplateBinding Foreground}"
                                                IsTabStop="True"
                                                IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                                TabIndex="{TemplateBinding TabIndex}"
                                                TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                TextWrapping="NoWrap"
                                                Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                                WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                    </local:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ===============================================================================  -->
    <!--  DecimalUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:DecimalUpDown}" />

    <!--  ===============================================================================  -->
    <!--  DoubleUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:DoubleUpDown}" />

    <!--  ===============================================================================  -->
    <!--  IntegerUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:IntegerUpDown}" />

    <!--  ===============================================================================  -->
    <!--  ShortUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:ShortUpDown}" />

    <!--  ===============================================================================  -->
    <!--  LongUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:LongUpDown}" />

    <!--  ===============================================================================  -->
    <!--  ByteUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:ByteUpDown}" />

    <!--  ===============================================================================  -->
    <!--  SingleUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:SingleUpDown}" />

    <!--  ===============================================================================  -->
    <!--  Style for all internal derived types of NumericUpDown will be done in code-behind  -->
    <!--  for external themes to redefine the default style. The reason is that the  -->
    <!--  toolkit.dll uses the InternalsVisibleTo attribute which makes internal data only  -->
    <!--  available in code-behind (not xaml).  -->
    <!--  (ex. Office2007 theme)  -->
    <!--  ===============================================================================  -->

    <!--  ===============================================================================  -->
    <!--  SByteUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:SByteUpDown}" />

    <!--  ===============================================================================  -->
    <!--  UIntegerUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:UIntegerUpDown}" />

    <!--  ===============================================================================  -->
    <!--  ULongUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:ULongUpDown}" />

    <!--  ===============================================================================  -->
    <!--  UShortUpDown  -->
    <!--  ===============================================================================  -->
    <Style BasedOn="{StaticResource NumericUpDown}"
           TargetType="{x:Type local:UShortUpDown}" />

</ResourceDictionary>
