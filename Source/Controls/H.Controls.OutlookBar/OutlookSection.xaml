<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:odc="clr-namespace:H.Controls.OutlookBar">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Controls.OutlookBar;Component/ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type odc:OutlookSection}">
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Background}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type odc:OutlookSection}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ToggleButton x:Name="button"
                                      Background="Transparent"
                                      BorderThickness="0,1,0,0"
                                      ClickMode="Press"
                                      Focusable="True"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}"
                                      Style="{StaticResource buttonInSection}"
                                      TextBlock.FontWeight="Bold">
                            <ToggleButton.Content>
                                <DockPanel Focusable="False">
                                    <ContentControl DockPanel.Dock="Right"
                                                    Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionRightTemplate)}" />

                                    <Grid Width="{TemplateBinding Height}"
                                          Height="{TemplateBinding Height}">
                                        <Image x:Name="image"
                                               Margin="4,0,4,0"
                                               VerticalAlignment="Center"
                                               ClipToBounds="True"
                                               DockPanel.Dock="Left"
                                               Focusable="False"
                                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                                               RenderOptions.EdgeMode="Aliased"
                                               SnapsToDevicePixels="False"
                                               Source="{TemplateBinding Image}"
                                               Stretch="None" />
                                        <!--<TextBlock HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Style="{DynamicResource {x:Static h:TextBlockKeys.Icon}}"
                                                   Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.Icon)}" />-->

                                    </Grid>
                                    <ContentPresenter x:Name="content"
                                                      Margin="4,0,4,0"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding Header}"
                                                      Focusable="False"
                                                      TextElement.Foreground="{TemplateBinding Foreground}" />
                                </DockPanel>
                            </ToggleButton.Content>
                        </ToggleButton>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMaximized" Value="False">
                            <Setter TargetName="content" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="button" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="Image" Value="{x:Null}">
                            <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
                            <!--<Setter Property="TextElement.Foreground" Value="Purple" />-->
                            <Setter Property="Panel.ZIndex" Value="999" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Selected}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
                            <Setter Property="Panel.ZIndex" Value="999" />
                            <!--<Setter Property="Foreground" Value="Green" />
                            <Setter Property="TextElement.Foreground" Value="Orange" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
