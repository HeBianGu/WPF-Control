<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Diagram.Extension">
    <DataTemplate DataType="{x:Type local:FlowableNodeData}">
        <Grid Background="Transparent">
            <Grid Width="{Binding Width, Converter={x:Static h:Converter.GetMathAddition}, ConverterParameter=1}"
                  Height="{Binding Height, Converter={x:Static h:Converter.GetMathAddition}, ConverterParameter=1}"
                  Margin="5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  h:DragAdornerBehavior.IsUse="{Binding IsTemplate}"
                  ClipToBounds="False">
                <Rectangle x:Name="path"
                           Fill="{Binding Fill}"
                           Stretch="Fill"
                           Stroke="{Binding Stroke}"
                           StrokeThickness="{Binding StrokeThickness}" />

                <TextBox x:Name="editor"
                         Foreground="{Binding Foreground}"
                         Style="{DynamicResource {x:Static local:DiagramKeys.TextKey}}" />

                <Button x:Name="btn_start"
                        Command="{Binding RelativeSource={RelativeSource AncestorType=h:Diagram}, Path=DataContext.StartNodeCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=h:Node}}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Geometry}}"
                        Visibility="Collapsed" />

                <Button x:Name="btn_invoke"
                        Command="{Binding InvokeCommand}"
                        Style="{DynamicResource {x:Static h:ButtonKeys.Geometry}}"
                        Visibility="Collapsed" />
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="editor" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Stroke}"
                         Value="{x:Null}">
                <Setter TargetName="path" Property="Stroke" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Fill}"
                         Value="{x:Null}">
                <Setter TargetName="path" Property="Fill" Value="{DynamicResource {x:Static h:BrushKeys.Background}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Running">
                <Setter TargetName="path" Property="StrokeDashArray" Value="2 2" />
                <Setter TargetName="path" Property="Stroke" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter TargetName="path" Property="StrokeThickness" Value="2" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="start">
                        <Storyboard RepeatBehavior="Forever"
                                    Storyboard.TargetName="path"
                                    Storyboard.TargetProperty="StrokeDashOffset">
                            <DoubleAnimation From="0"
                                             To="100"
                                             Duration="00:00:05" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="start" />
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Success">
                <Setter TargetName="path" Property="Stroke" Value="{DynamicResource {x:Static h:BrushKeys.Green}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Error">
                <Setter TargetName="path" Property="Stroke" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Wait">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UseStart}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="btn_start" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UseInvoke}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="btn_invoke" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>