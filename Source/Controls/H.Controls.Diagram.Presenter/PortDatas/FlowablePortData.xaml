<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Diagram.Presenter"
                    xmlns:lps="clr-namespace:H.Controls.Diagram.Presenter.PortDatas">
    <DataTemplate DataType="{x:Type lps:FlowablePortData}">
        <Grid Background="Transparent">
            <Path Style="{DynamicResource {x:Static local:DiagramKeys.StatePortPath}}" />
            <TextBlock x:Name="icon"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontFamily="Segoe MDL2 Assets"
                       Text="{Binding Icon}"
                       ToolTip="{Binding Description}" />
            <TextBlock x:Name="txt"
                       Width="30"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Background="{x:Null}"
                       FontFamily="{Binding FontFamily}"
                       FontSize="{Binding FontSize}"
                       FontStretch="{Binding FontStretch}"
                       FontStyle="{Binding FontStyle}"
                       FontWeight="{Binding FontWeight}"
                       Foreground="{Binding Foreground}"
                       Text="{Binding Text}"
                       TextTrimming="CharacterEllipsis"
                       ToolTip="{Binding Description}" />
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Text}"
                         Value="{x:Null}">
                <Setter TargetName="txt" Property="Width" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Dock}"
                         Value="Left">
                <Setter TargetName="icon" Property="Margin" Value="-30,0,0,0" />
                <Setter TargetName="txt" Property="Margin" Value="20,0,-50,0" />
                <Setter TargetName="txt" Property="TextAlignment" Value="Left" />
                <Setter TargetName="txt" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="txt" Property="VerticalAlignment" Value="Center" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Dock}"
                         Value="Right">
                <Setter TargetName="icon" Property="Margin" Value="0,0,-30,0" />
                <Setter TargetName="txt" Property="Margin" Value="-50,0,20,0" />
                <Setter TargetName="txt" Property="TextAlignment" Value="Right" />
                <Setter TargetName="txt" Property="HorizontalAlignment" Value="Right" />
                <Setter TargetName="txt" Property="VerticalAlignment" Value="Center" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Dock}"
                         Value="Top">
                <Setter TargetName="icon" Property="Margin" Value="0,-30,0,0" />
                <Setter TargetName="txt" Property="Margin" Value="0,0,0,-30" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Dock}"
                         Value="Bottom">
                <Setter TargetName="icon" Property="Margin" Value="0,0,0,-30" />
                <Setter TargetName="txt" Property="Margin" Value="0,-30,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Wait">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>

            <Trigger Property="h:Part.IsDragEnter" Value="True">
                <!--<Setter TargetName="path" Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default3}}" />-->
            </Trigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Running">
                <!--<Setter TargetName="path" Property="Stroke" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />-->
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <!--<DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="start">
                        <Storyboard AutoReverse="True"
                                    RepeatBehavior="Forever"
                                    Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation From="0.2"
                                             To="1"
                                             Duration="00:00:00.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="start" />
                </DataTrigger.ExitActions>-->
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>