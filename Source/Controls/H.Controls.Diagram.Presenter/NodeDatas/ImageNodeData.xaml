<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:ln="clr-namespace:H.Controls.Diagram.Presenter.NodeDatas"
                    xmlns:local="clr-namespace:H.Controls.Diagram.Presenter">
    <DataTemplate DataType="{x:Type ln:ImageNodeDataBase}">
        <Border x:Name="boder"
                Background="Transparent">
            <AdornerDecorator HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                <Grid Width="{Binding Width, Converter={x:Static h:Converter.GetMathAddition}, ConverterParameter=1}"
                      Height="{Binding Height, Converter={x:Static h:Converter.GetMathAddition}, ConverterParameter=1}"
                      Margin="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      h:DraggableDataTemplateAdornerBehavior.IsUse="{Binding IsTemplate}"
                      Background="Transparent"
                      ClipToBounds="False">
                    <!--    -->
                    <!--<Border x:Name="icon"
                            Background="{DynamicResource {x:Static h:BrushKeys.Dark0_5}}"
                            Visibility="Collapsed">
                        <TextBlock FontSize="200" Text="x:Static h:IconAll.Image" />
                    </Border>-->

                    <Image Margin="{Binding StrokeThickness}"
                           RenderOptions.BitmapScalingMode="LowQuality"
                           Source="{Binding ImageSource}"
                           Stretch="Uniform" />

                    <TextBlock Margin="{Binding TextMargin}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               FontSize="{Binding FontSize}"
                               FontStretch="{Binding FontStretch}"
                               FontStyle="{Binding FontStyle}"
                               FontWeight="{Binding FontWeight}"
                               Foreground="White"
                               Text="{Binding Text}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="2"
                                              ShadowDepth="0"
                                              Color="Black" />
                        </TextBlock.Effect>
                    </TextBlock>

                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="{Binding TitleFontSize}"
                               FontWeight="Bold"
                               Foreground="White"
                               Text="{Binding Name}"
                               Visibility="{Binding IsTemplate, Converter={x:Static h:Converter.GetTrueToVisible}}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="20"
                                              ShadowDepth="0"
                                              Color="Black" />
                        </TextBlock.Effect>
                    </TextBlock>

                    <TextBlock Margin="5"
                               VerticalAlignment="Bottom"
                               Foreground="White"
                               Text="{Binding Message}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="2"
                                              ShadowDepth="0"
                                              Color="Black" />
                        </TextBlock.Effect>
                    </TextBlock>

                    <b:Interaction.Behaviors>
                        <h:LoadedAdornerBehavior AdornerType="{x:Type h:NoteResizeAdorner}"
                                                 IsUse="{Binding IsTemplate, Converter={x:Static h:Converter.GetTrueToFalse}}" />
                    </b:Interaction.Behaviors>
                </Grid>
            </AdornerDecorator>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding State}"
                         Value="Success">
                <Setter TargetName="boder" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Green}}" />
                <Setter TargetName="boder" Property="BorderThickness" Value="1" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Error">
                <Setter TargetName="boder" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                <Setter TargetName="boder" Property="BorderThickness" Value="1" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Running">
                <Setter TargetName="boder" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter TargetName="boder" Property="BorderThickness" Value="1" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding State}" Value="Running" />
                    <Condition Binding="{Binding UseAnimation}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="start">
                        <Storyboard AutoReverse="True"
                                    RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetName="boder"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0.7"
                                             To="1"
                                             Duration="00:00:00.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="start" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>

            <!--<DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
            -->
            <!--<Setter TargetName="boder" Property="BorderThickness" Value="3" />-->
            <!--
                <Setter TargetName="icon" Property="Visibility" Value="Visible" />
            </DataTrigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>