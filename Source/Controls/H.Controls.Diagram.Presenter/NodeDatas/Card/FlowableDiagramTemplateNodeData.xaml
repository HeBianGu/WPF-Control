<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:ln="clr-namespace:H.Controls.Diagram.Presenter.NodeDatas.Card"
                    xmlns:local="clr-namespace:H.Controls.Diagram.Presenter">
    <DataTemplate DataType="{x:Type ln:FlowableDiagramTemplateNodeData}">
        <Grid h:DraggableDataTemplateAdornerBehavior.IsUse="{Binding IsTemplate}"
              Background="Transparent">
            <Grid Width="{Binding Width, Converter={x:Static h:Converter.GetMathAddition}, ConverterParameter=1}"
                  Height="{Binding Height, Converter={x:Static h:Converter.GetMathAddition}, ConverterParameter=1}"
                  Margin="5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  ClipToBounds="False">
                <Grid>
                    <Border x:Name="bd"
                            Background="{Binding Fill}"
                            BorderBrush="{Binding Stroke}"
                            BorderThickness="{Binding StrokeThickness}"
                            CornerRadius="{Binding CornerRadius, Converter={x:Static h:Converter.GetDoubleToCornerRadius}}">
                        <TextBox x:Name="editor"
                                 Foreground="{Binding Foreground}"
                                 Style="{DynamicResource {x:Static local:DiagramKeys.EditTextBox}}" />
                    </Border>
                    <DockPanel Margin="5"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top">
                        <TextBlock x:Name="icon"
                                   Text="{Binding Icon}" />
                        <TextBlock x:Name="txt"
                                   Margin="2,0"
                                   VerticalAlignment="Center"
                                   FontSize="10"
                                   Text="{Binding Title}" />
                    </DockPanel>

                    <TextBlock x:Name="t"
                               FontSize="50"
                               Foreground="{DynamicResource {x:Static h:BrushKeys.Orange}}"
                               Text="&#xe783;"
                               ToolTip="模板不存在"
                               Visibility="Collapsed" />
                </Grid>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding FilePath, Converter={x:Static h:Converter.GetFileExists}}"
                         Value="False">
                <Setter TargetName="t" Property="Visibility" Value="Visible" />
                <Setter TargetName="bd" Property="IsEnabled" Value="False" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="editor" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Stroke}"
                         Value="{x:Null}">
                <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Fill}"
                         Value="{x:Null}">
                <Setter TargetName="bd" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Background}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Running">
                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Accent}}" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="start">
                        <Storyboard AutoReverse="True"
                                    RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetName="icon"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0.2"
                                             To="1"
                                             Duration="00:00:00.5" />
                            <DoubleAnimation Storyboard.TargetName="txt"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0.2"
                                             To="1"
                                             Duration="00:00:00.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="start" />
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Success">
                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Green}}" />
                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Green}}" />
                <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Green}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Error">
                <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
                <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Wait">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>