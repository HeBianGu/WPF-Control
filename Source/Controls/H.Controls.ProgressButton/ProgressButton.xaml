<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.ProgressButton"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressButton.Default,
                                        TypeInTargetAssembly={x:Type local:ProgressButton}}"
           TargetType="{x:Type local:ProgressButton}">
        <Setter Property="Message" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static LayoutKeys.ItemHeight}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />

        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="10,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ProgressButton}">
                    <Border x:Name="Border"
                            BorderBrush="{DynamicResource {x:Static BrushKeys.MouseOver}}"
                            BorderThickness="1"
                            CornerRadius="2"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource {x:Static h:ColorKeys.MouseOver}}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!--<VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>-->
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static h:ColorKeys.Selected}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static h:ColorKeys.MouseOver}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--<VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static h:ColorKeys.BackgroundDisabled}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!--<ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />-->
                        <Grid>
                            <ContentPresenter x:Name="cp"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True" />
                            <ProgressBar Height="Auto"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"
                                         IsIndeterminate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsIndeterminate}"
                                         Maximum="1.0"
                                         Minimum="0.0"
                                         Opacity="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ProgressOpacity}"
                                         Style="{x:Null}"
                                         Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsBusy, Converter={x:Static h:Converter.GetTrueToVisible}}"
                                         Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Percent}" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy" Value="true">
                            <Setter TargetName="cp" Property="Content" Value="{Binding Path=Message, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>

                        <Trigger Property="Content" Value="">
                            <Setter TargetName="cp" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="cp" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource {x:Static h:ColorKeys.ForegroundAssist}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.ProgressButton.Command,
                                        TypeInTargetAssembly={x:Type local:ProgressButton}}"
           BasedOn="{StaticResource {x:Static h:ProgressButton.DefaultKey}}"
           TargetType="{x:Type local:ProgressButton}">
        <Setter Property="IsBusy" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.IsBusy}" />
        <Setter Property="Percent" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Percent}" />
        <Setter Property="IsIndeterminate" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.IsIndeterminate}" />
        <Setter Property="Message" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Message}" />
        <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.IsEnabled}" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.IsVisible, Converter={x:Static h:Converter.GetTrueToVisible}}" />
    </Style>

    <Style BasedOn="{StaticResource {x:Static h:ProgressButton.CommandKey}}"
           TargetType="{x:Type local:ProgressButton}" />
</ResourceDictionary>
