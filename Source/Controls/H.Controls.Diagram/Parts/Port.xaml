<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:lb="clr-namespace:H.Controls.Diagram.Bevaviors"
                    xmlns:lbl="clr-namespace:H.Controls.Diagram.Bevaviors.DynimacLinkBehavior"
                    xmlns:ld="clr-namespace:H.Controls.Diagram.Datas"
                    xmlns:lf="clr-namespace:H.Controls.Diagram.Flowables"
                    xmlns:local="clr-namespace:H.Controls.Diagram"
                    xmlns:lp="clr-namespace:H.Controls.Diagram.Parts"
                    xmlns:lpb="clr-namespace:H.Controls.Diagram.Parts.Base"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <DataTemplate DataType="{x:Type ld:DefaultPortData}">
        <Border x:Name="boder"
                Width="10"
                Height="10"
                Background="{DynamicResource {x:Static h:BrushKeys.Dark4}}"
                BorderBrush="White"
                BorderThickness="2">
            <!--<TextBlock x:Name="tb_unenble" Text="×" Visibility="Collapsed" FontSize="50" Foreground="Black" ClipToBounds="False"/>-->
        </Border>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="boder" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Dark6}}" />
                <!--<Setter TargetName="boder" Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default2}}" />-->
            </Trigger>

            <Trigger Property="lpb:Part.IsDragEnter" Value="True">
                <Setter TargetName="boder" Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Dark8}}" />
                <!--<Setter TargetName="boder" Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default3}}" />-->
            </Trigger>

            <!--<Trigger Property="local:Part.IsCanDrop" Value="False">
                <Setter Property="Visibility" Value="Visible" TargetName="tb_unenble"/>
            </Trigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Port.Default,
                                        TypeInTargetAssembly={x:Type lp:Port}}"
           TargetType="{x:Type lp:Port}">
        <!--<Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />-->
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HasError" Value="{Binding HasError, Mode=TwoWay}" />
        <!--<Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <ContextMenu.Template>
                        <ControlTemplate>
                            <h:PropertyGrid MinWidth="200"
                                            h:Cattach.ItemHorizontalAlignment="Stretch"
                                            h:Cattach.TitleWidth="0"
                                            h:Cattach.UseTitle="False"
                                            BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrushDefault}}"
                                            SelectObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PlacementTarget.Content}"
                                            Style="{DynamicResource {x:Static h:PropertyGrid.ClearlyKey}}"
                                            UseAsync="True"
                                            UseGroupNames="操作">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Background="Transparent"
                                                  Command="{Binding Value}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"
                                                  Header="{Binding Name}"
                                                  Icon="{Binding Icon}"
                                                  Style="{DynamicResource {x:Static h:MenuItemKeys.Icon}}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </h:PropertyGrid>
                        </ControlTemplate>
                    </ContextMenu.Template>
                </ContextMenu>
            </Setter.Value>
        </Setter>-->
        <Setter Property="h:BehvaiorAttach.Behaviors">
            <Setter.Value>
                <h:Behaviors>
                    <lbl:PortLinkBehavior />
                </h:Behaviors>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip" Value="{Binding Description}" />
        <Style.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
            -->
            <!--<Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default1}}" />-->
            <!--
                <Setter Property="Cursor" Value="SizeAll" />
            </Trigger>-->
            <Trigger Property="IsSelected" Value="True">
                <!--<Setter Property="Effect" Value="{DynamicResource {x:Static h:DiagramEffectKey.IsSelected}}" />-->
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={RelativeSource Mode=Self}, Path=Content.PortType}" Value="OutPut" />
                    <Condition Binding="{Binding Source={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Cursor" Value="Pen" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={RelativeSource Mode=Self}, Path=Content.PortType}" Value="Both" />
                    <Condition Binding="{Binding Source={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Cursor" Value="Pen" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Success">
                <Setter Property="ToolTip" Value="{Binding Message}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Error">
                <Setter Property="ToolTip" Value="{Binding Message}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Static lp:Port.DefaultKey}}"
           TargetType="{x:Type lp:Port}" />
</ResourceDictionary>

