<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Controls.Form"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Controls.Form;component/Themes/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <local:DoubleArrayConverter x:Key="S.Converter.DoubleArray" />

    <ControlTemplate x:Key="S.PropertyGrid.Template.Light" TargetType="local:PropertyGrid">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer Margin="0" Padding="0">
                <ItemsPresenter Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="S.PropertyGrid.Tempate.Default" TargetType="local:PropertyGrid">
        <GroupBox Padding="0"
                  Header="{TemplateBinding Title}">
            <Border HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <DockPanel>
                    <ContentPresenter Content="{TemplateBinding BottomContent}" DockPanel.Dock="Bottom" />
                    <!--<ContentControl DockPanel.Dock="Bottom" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.BottomTemplate)}" />
                    <ContentControl DockPanel.Dock="Top" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.TopTemplate)}" />-->
                    <ScrollViewer Margin="0" Padding="0">
                        <ItemsPresenter Margin="0" />
                    </ScrollViewer>
                </DockPanel>
            </Border>
        </GroupBox>
    </ControlTemplate>

    <Style x:Key="S.PropertyGrid.Dynimac"  TargetType="local:PropertyGrid">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0,0,10,0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Title" Value="Title" />
        <Setter Property="MessageWidth" Value="15" />
        <!--<Setter Property="h:Cattach.BackgroundColumn" Value="1" />
        <Setter Property="h:Cattach.UseBackground" Value="False" />-->
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <!--<Setter Property="h:Cattach.TitleWidth" Value="{DynamicResource {x:Static h:SystemKeys.TitleWidth}}" />
        <Setter Property="h:Cattach.ItemMinHeight" Value="{DynamicResource {x:Static h:LayoutKeys.RowHeight}}" />
        <Setter Property="h:Cattach.TitleForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundDefault}}" />-->
        <Setter Property="Template" Value="{StaticResource S.PropertyGrid.Light}" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Light, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource S.PropertyGrid.Dynimac}" TargetType="local:PropertyGrid">
        <Setter Property="Template" Value="{StaticResource S.PropertyGrid.Template.Light}" />
    </Style>
    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Default, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource S.PropertyGrid.Dynimac}" TargetType="local:PropertyGrid">
        <Setter Property="Template" Value="{StaticResource S.PropertyGrid.Tempate.Default}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Clearly, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource S.PropertyGrid.Dynimac}" TargetType="local:PropertyGrid">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PropertyGrid">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <ContentPresenter Content="{TemplateBinding BottomContent}" DockPanel.Dock="Bottom" />
                            <!--<ContentControl DockPanel.Dock="Bottom" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.BottomTemplate)}" />
                            <ContentControl DockPanel.Dock="Top" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.TopTemplate)}" />-->
                            <ScrollViewer Margin="0" Padding="0">
                                <ItemsPresenter Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Default.WithSumit, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static local:PropertyGrid.DefaultKey}}" TargetType="local:PropertyGrid">
        <Setter Property="Template" Value="{StaticResource S.PropertyGrid.Tempate.Default}" />
        <!--<Setter Property="h:Cattach.BottomTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Margin="0,5,0,10">
                        <Button Command="{x:Static h:Commander.Sure}" Content="确定" IsDefault="True" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Default.WithSumitClose, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static local:PropertyGrid.DefaultKey}}" TargetType="local:PropertyGrid">
        <Setter Property="Template" Value="{StaticResource S.PropertyGrid.Tempate.Default}" />
        <!--<Setter Property="h:Cattach.BottomTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Margin="0,5,0,0" HorizontalAlignment="Center" Orientation="Horizontal">
                        <Button Command="{x:Static h:Commander.Sure}" Content="确定" IsDefault="True" />
                        <Button Margin="20,0,0,0"
                                Command="{x:Static h:Commander.Close}"
                                Content="取消"
                                IsCancel="True" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.SettingDefault, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="ItemTemplateSelector" Value="{x:Null}" />
        <Setter Property="UseEnumerator" Value="True" />
        <!--<Setter Property="h:Cattach.TitleMinWidth" Value="100" />-->
        <Setter Property="UseAsync" Value="True" />
        <Setter Property="UseArray" Value="False" />
        <Style.Resources>
            <DataTemplate DataType="{x:Type local:BoolPropertyItem}">
                <Grid Height="{DynamicResource {x:Static h:LayoutKeys.RowHeight}}" Visibility="{Binding Visibility}">
                    <CheckBox Margin="5,0" Content="{Binding Name}" IsChecked="{Binding Value}" />
                </Grid>
            </DataTemplate>
            <!--<DataTemplate DataType="{x:Type local:TextPropertyItem}">
                <Grid Height="{DynamicResource {x:Static h:LayoutKeys.RowHeight}}" Visibility="{Binding Visibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0"
                             h:Cattach.IsUseHistory="{Binding RelativeSource={RelativeSource AncestorType=local:PropertyGrid}, Path=(h:Cattach.IsUseHistory)}"
                             
                             h:Cattach.TitleMinWidth="{Binding RelativeSource={RelativeSource AncestorType=local:PropertyGrid}, Path=(h:Cattach.TitleMinWidth)}"
                             
                             
                             IsReadOnly="{Binding ReadOnly}"
                             Style="{DynamicResource {x:Static h:TextBoxKeys.LabelClear}}"
                             Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <h:Cattach.TitleTemplate>
                            <ControlTemplate TargetType="ContentControl">
                                <Border Width="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(h:Cattach.TitleWidth)}"
                                        MinWidth="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(h:Cattach.TitleMinWidth)}"
                                        Margin="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(h:Cattach.TitleMargin)}"
                                        Background="Transparent">
                                    <DockPanel>
                                        <TextBlock VerticalAlignment="Center"
                                                   DockPanel.Dock="Right"
                                                   Foreground="{DynamicResource {x:Static h:BrushKeys.Red}}"
                                                   Text="{Binding Flag}" />

                                        <TextBlock HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   Background="Transparent"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(h:Cattach.TitleForeground)}"
                                                   Text="{TemplateBinding Content}"
                                                   ToolTip="{TemplateBinding Content}" />
                                    </DockPanel>
                                </Border>
                            </ControlTemplate>
                        </h:Cattach.TitleTemplate>
                    </TextBox>

                    <TextBlock Style="{StaticResource S.TextBlock.Error}"/>

                </Grid>
            </DataTemplate>-->

            <!--<DataTemplate DataType="{x:Type local:EnumPropertyItem}">
                <Grid Height="{DynamicResource {x:Static h:LayoutKeys.RowHeight}}" Visibility="{Binding Visibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ComboBox h:Cattach.BackgroundColumn="{Binding RelativeSource={RelativeSource AncestorType=local:PropertyGrid}, Path=(h:Cattach.BackgroundColumn)}"
                              h:Cattach.EnumTypeSource="{Binding PropertyInfo.PropertyType, Mode=OneWay}"
                              h:Cattach.IsUseHistory="{Binding RelativeSource={RelativeSource AncestorType=local:PropertyGrid}, Path=(h:Cattach.IsUseHistory)}"
                              
                              h:Cattach.TitleMargin="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}, Path=(h:Cattach.TitleMargin)}"
                              h:Cattach.TitleMinWidth="{Binding RelativeSource={RelativeSource AncestorType=local:PropertyGrid}, Path=(h:Cattach.TitleMinWidth)}"
                              
                              h:Cattach.UseBackground="{Binding RelativeSource={RelativeSource AncestorType=local:PropertyGrid}, Path=(h:Cattach.UseBackground)}"
                              SelectedItem="{Binding Value}"
                              Style="{DynamicResource {x:Static h:ComboBoxKeys.LabelSingle}}" />


                    <TextBlock Style="{StaticResource S.TextBlock.Error}"/>

                </Grid>
            </DataTemplate>-->


            <!--<DataTemplate DataType="{x:Type local:EnumPropertyItem}">
                <StackPanel Visibility="{Binding Visibility}">
                    <h:Row>
                        <TextBlock Grid.ColumnSpan="12" Text="{Binding Name}" />
                    </h:Row>
                    <ListBox Margin="10,0,0,0"
                             h:Cattach.EnumTypeSource="{Binding PropertyInfo.PropertyType, Mode=OneWay}"
                             ItemContainerStyle="{DynamicResource {x:Static h:ListBoxItemKeys.RadioButton}}"
                             SelectedItem="{Binding Value}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="4" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </StackPanel>
            </DataTemplate>-->

            <DataTemplate DataType="{x:Type local:CommandPropertyItem}">
                <Grid Height="{DynamicResource {x:Static h:LayoutKeys.RowHeight}}" Visibility="{Binding Visibility}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0"
                            
                            
                            Command="{Binding Value}"
                            Content="{Binding Name}"
                            IsEnabled="{Binding ReadOnly, Converter={x:Static h:Converter.GetTrueToFalse}}"
                            >
                        <Button.ToolTip>
                            <ToolTip>
                                <Border>
                                    <UniformGrid Columns="1">
                                        <TextBlock Text="{Binding HotKey}" />
                                        <TextBlock Text="{Binding Description}" />
                                    </UniformGrid>
                                </Border>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>

                    <TextBlock Style="{StaticResource S.TextBlock.Error}" />
                </Grid>
            </DataTemplate>

        </Style.Resources>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Control, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="UseArray" Value="False" />
        <Setter Property="UseClass" Value="False" />
        <Setter Property="UseEnumerator" Value="False" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Dialog, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="UseArray" Value="False" />
        <Setter Property="UseClass" Value="True" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseEnumerator" Value="False" />
        <!--<Setter Property="h:Cattach.Icon" Value="" />
        <Setter Property="h:Cattach.UseClose" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.DialogCover}}" />
        <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default3}}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PropertyGrid">
                    <Grid Background="{TemplateBinding Background}">
                        <Border MinWidth="400"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="True">
                            <Grid>
                                <DockPanel>
                                    <TextBlock Margin="10,10"
                                               HorizontalAlignment="Left"
                                               DockPanel.Dock="Top"
                                               FontSize="{StaticResource {x:Static h:FontSizeKeys.Header3}}"
                                               FontWeight="Bold"
                                               Text="{TemplateBinding Title}" />
                                    <ContentControl Margin="10,10,10,0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    DockPanel.Dock="Bottom" />
                                    <ScrollViewer Margin="0" Padding="0">
                                        <ItemsPresenter Margin="0" />
                                    </ScrollViewer>
                                </DockPanel>
                                <!--<ContentControl HorizontalAlignment="Right" VerticalAlignment="Top" Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(h:Cattach.CaptionRightTemplate)}" />-->
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="h:Cattach.BottomTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Button HorizontalAlignment="Right"
                                Command="{x:Static h:Commander.Sure}"
                                Content="确定"
                                IsDefault="True" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="h:Cattach.CaptionRightTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Button Command="{x:Static h:Commander.Close}" Style="{DynamicResource {x:Static h:ButtonKeys.Close}}" WindowChrome.IsHitTestVisibleInChrome="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Transition, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.DialogKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <!--<Setter Property="h:Cattach.CaptionRightTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Button Command="{x:Static h:Commander.Close}" Style="{DynamicResource {x:Static h:ButtonKeys.Close}}" WindowChrome.IsHitTestVisibleInChrome="True">
                        --><!--<h:Interaction.Triggers>
                            <h:EventTrigger EventName="Click">
                                <h:ChangeAttachPropertyAction AttachType="{x:Type h:TransitionService}"
                                                              PropertyName="IsVisible"
                                                              TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}}"
                                                              Value="False" />
                            </h:EventTrigger>
                        </h:Interaction.Triggers>--><!--
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="h:Cattach.BottomTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Button HorizontalAlignment="Right" Content="确定" IsDefault="True">
                            --><!--<h:Interaction.Triggers>
                                <h:EventTrigger EventName="Click">
                                    <h:CallMethodAction MethodName="TransitionSumit" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=h:PropertyGrid}}" />
                                </h:EventTrigger>
                            </h:Interaction.Triggers>--><!--
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.Command, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="UseCommand" Value="True" />
        <Setter Property="UseCommandOnly" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button 
                            Command="{Binding Value}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                            Content="{Binding Name}"
                            ToolTip="{Binding Description}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.CommandIcon, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="UseCommand" Value="True" />
        <Setter Property="UseCommandOnly" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button 
                            Command="{Binding Value}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                            
                            ToolTip="{Binding Description}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.CommandMouseOver, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="UseCommand" Value="True" />
        <Setter Property="UseCommandOnly" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button 
                            Command="{Binding Value}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                            
                            ToolTip="{Binding Description}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.PropertyGrid.PreviewIcon, TypeInTargetAssembly={x:Type local:PropertyGrid}}" BasedOn="{StaticResource {x:Static h:PropertyGrid.ClearlyKey}}" TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="UsePropertyView" Value="True" />
        <!--<Setter Property="h:Cattach.ItemHeight" Value="Auto" />-->
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel LastChildFill="False" ToolTip="{Binding Description}">
                        <TextBlock VerticalAlignment="Center" FontSize="10">
                            <Run Text="{Binding Icon}" />
                        </TextBlock>
                        <ContentPresenter Margin="2,0" Content="{Binding Value}" />
                        <TextBlock DockPanel.Dock="Left" Style="{StaticResource S.TextBlock.Unit}" />
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
