<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Windows.Ribbon;component/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="{x:Type RibbonButton}" TargetType="{x:Type RibbonButton}">
        <Setter Property="Label" Value="RibbonButton" />
        <Setter Property="LargeImageSource" Value="{Logo}" />
        <Setter Property="SmallImageSource" Value="{Logo}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="Width" Value="{DynamicResource {x:Static LayoutKeys.ItemHeight}}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static LayoutKeys.ItemHeight}}" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
        <Setter Property="MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
        <Setter Property="PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
        <Setter Property="PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
        <Setter Property="FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
        <Setter Property="FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource S.RibbonToolTip.InitialShowDelay}" />
        <Setter Property="ToolTipService.ShowDuration" Value="{StaticResource S.RibbonToolTip.ShowDuration}" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource S.RibbonToolTip.BetweenShowDelay}" />
        <Setter Property="Template" Value="{StaticResource S.RibbonButton.Template}" />
        <Setter Property="QuickAccessToolBarControlSizeDefinition">
            <Setter.Value>
                <RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Thickness
                x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type Ribbon},
                                             ResourceId=LargeImageMargin}"
                Bottom="2"
                Left="1"
                Right="1"
                Top="1" />
        </Style.Resources>
    </Style>

</ResourceDictionary>