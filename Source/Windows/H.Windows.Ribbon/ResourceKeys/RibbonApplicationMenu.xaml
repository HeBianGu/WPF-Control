<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                    xmlns:h="https://github.com/HeBianGu">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Windows.Ribbon;component/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Geometry x:Key="&#233;">M 0 0 L 2.25 3 L 4.5 0 Z</Geometry>

    <Style x:Key="&#234;"
           TargetType="{x:Type RibbonToggleButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FocusManager.IsFocusScope" Value="False" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource S.RibbonToolTip.InitialShowDelay}" />
        <Setter Property="ToolTipService.ShowDuration" Value="{StaticResource S.RibbonToolTip.ShowDuration}" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource S.RibbonToolTip.BetweenShowDelay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RibbonToggleButton}">
                    <Grid Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                          Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                          SnapsToDevicePixels="True">
                        <Border x:Name="OuterBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0,2,0,0" />
                        <Border x:Name="MiddleBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0,2,0,0">
                            <Border x:Name="InnerBorder"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="0,2,0,0" />
                        </Border>

                        <StackPanel Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                            <Image Width="16"
                                   Height="16"
                                   Margin="0,-0.5,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   RenderOptions.EdgeMode="Aliased"
                                   Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RibbonApplicationMenu}}, Path=SmallImageSource}" />
                            <TextBlock Margin="2,0"
                                       Text="{TemplateBinding Label}" />
                            <Path x:Name="DownArrow"
                                  Margin="3.5,0,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource &#233;}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness=".5">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                </Path.RenderTransform>
                            </Path>

                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MiddleBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
                            <Setter TargetName="MiddleBorder" Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MiddleBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.MouseOver}}" />
                            <Setter TargetName="MiddleBorder" Property="Background" Value="{DynamicResource {x:Static BrushKeys.MouseOver}}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.MouseOver}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MiddleBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Selected}}" />
                            <Setter TargetName="MiddleBorder" Property="Background" Value="{DynamicResource {x:Static BrushKeys.Selected}}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Selected}}" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Selected}}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static BrushKeys.Selected}}" />
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="MiddleBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="MiddleBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="MiddleBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DownArrow" Property="Stroke" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                            <Setter TargetName="DownArrow" Property="Fill" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RibbonApplicationMenu}"
           TargetType="{x:Type RibbonApplicationMenu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
                   TargetType="{x:Type RibbonSeparator}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonApplicationMenu}}, Path=Ribbon.BorderBrush}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonApplicationMenu}}, Path=Ribbon.Background}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RibbonSeparator}">
                            <Border x:Name="MainBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,1,0,1">
                                <Border x:Name="Overlay"
                                        Background="{DynamicResource {x:Static BrushKeys.Background}}">
                                    <TextBlock x:Name="Text"
                                               Margin="2,1,2,1"
                                               Text="{TemplateBinding Label}" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                             Value="True">
                                    <Setter TargetName="Text" Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                                    <Setter TargetName="Overlay" Property="Background" Value="Transparent" />
                                    <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Red}}" />
                                    <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource {x:Static BrushKeys.MouseOver}}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Label" Value="{x:Null}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RibbonSeparator}">
                                    <Grid x:Name="Grid"
                                          Margin="1"
                                          SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <!--  Icon or check mark column  -->
                                            <ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup" />
                                            <!--  Header column  -->
                                            <ColumnDefinition Width="*"
                                                              MinWidth="44" />
                                            <!--  Submenu arrow column  -->
                                            <ColumnDefinition Width="22" />
                                        </Grid.ColumnDefinitions>

                                        <Line x:Name="Line"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="2"
                                              Stretch="Fill"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="1"
                                              X1="0"
                                              X2="1"
                                              Y1="0"
                                              Y2="0" />
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                                     Value="True">
                                            <Setter TargetName="Line" Property="Stroke" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                                            <Setter TargetName="Grid" Property="Margin" Value="0" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="Label" Value="RibbonApplicationMenu" />
        <Setter Property="LargeImageSource" Value="{Logo}" />
        <Setter Property="SmallImageSource" Value="{Logo}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static LayoutKeys.ItemHeight}}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RibbonApplicationMenu}">
                    <Grid x:Name="OuterGrid"
                          Focusable="False"
                          SnapsToDevicePixels="True">
                        <RibbonToggleButton x:Name="PART_ToggleButton"
                                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                                            Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                            Label="{TemplateBinding Label}"
                                            SmallImageSource="{TemplateBinding SmallImageSource}"
                                            Style="{StaticResource &#234;}"
                                            ToolTipDescription="{TemplateBinding ToolTipDescription}"
                                            ToolTipFooterDescription="{TemplateBinding ToolTipFooterDescription}"
                                            ToolTipFooterImageSource="{TemplateBinding ToolTipFooterImageSource}"
                                            ToolTipFooterTitle="{TemplateBinding ToolTipFooterTitle}"
                                            ToolTipImageSource="{TemplateBinding ToolTipImageSource}"
                                            ToolTipTitle="{TemplateBinding ToolTipTitle}" />
                        <Border x:Name="CenterBorder"
                                Height="1"
                                Margin="-1,-1,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top" />
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}"
                               PlacementTarget="{Binding ElementName=CenterBorder}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                               SnapsToDevicePixels="True">
                            <classic:SystemDropShadowChrome x:Name="Shadow"
                                                            KeyTipService.IsKeyTipScope="True"
                                                            RenderOptions.ClearTypeHint="Enabled"
                                                            Color="Transparent">
                                <Grid>
                                    <Border x:Name="PopupBorder"
                                            Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonMenuButton}}, Path=Ribbon.Background}"
                                            BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonMenuButton}}, Path=Ribbon.BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Border x:Name="HeaderBorder"
                                                    Height="{DynamicResource {x:Static LayoutKeys.ItemHeight}}"
                                                    Background="Transparent"
                                                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonMenuButton}}, Path=Ribbon.BorderBrush}"
                                                    BorderThickness="0,0,0,1"
                                                    CornerRadius="2,2,0,0" />
                                            <Border x:Name="HeaderOverlayBorder"
                                                    Background="{DynamicResource {x:Static BrushKeys.Background}}"
                                                    BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrush}}"
                                                    BorderThickness="0,0,0,1"
                                                    CornerRadius="2,2,0,0" />
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="2" />
                                                    <ColumnDefinition Width="300" />
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="MainPaneBorder"
                                                        Background="{DynamicResource {x:Static BrushKeys.Background}}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                                                      Grid.Row="1"
                                                                      CanContentScroll="True"
                                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                                                                                                    ResourceId=MenuScrollViewer}}">

                                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="BackgroundCanvas"
                                                                        Width="0"
                                                                        Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                    <Rectangle x:Name="OpaqueRect"
                                                                               Width="{Binding ElementName=MainPaneBorder, Path=ActualWidth}"
                                                                               Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}"
                                                                               Fill="{Binding ElementName=MainPaneBorder, Path=Background}"
                                                                               RadiusX="2"
                                                                               RadiusY="2" />
                                                                    <Rectangle x:Name="OverlayRect"
                                                                               Width="{Binding ElementName=MainPaneBorder, Path=ActualWidth}"
                                                                               Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}"
                                                                               Fill="{Binding ElementName=MainPaneBorder, Path=Background}"
                                                                               RadiusX="2"
                                                                               RadiusY="2" />
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                                Grid.IsSharedSizeScope="True" />
                                                            </Grid>

                                                        </ScrollViewer>
                                                        <Border Name="ResizeControl"
                                                                Grid.Row="2"
                                                                Background="{DynamicResource {x:Static BrushKeys.Background}}"
                                                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}"
                                                                BorderThickness="0,1,0,0"
                                                                Visibility="Collapsed">
                                                            <Thumb x:Name="PART_ResizeThumb"
                                                                   Style="{StaticResource S.Thumb.SizeNWSE}" />
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                                <Border x:Name="PART_SubmenuPlaceholder"
                                                        Grid.Column="2"
                                                        Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}"
                                                        Background="{DynamicResource {x:Static BrushKeys.BorderBrush}}">
                                                    <ContentPresenter x:Name="PART_AuxiliaryPaneContentPresenter"
                                                                      ContentSource="AuxiliaryPaneContent"
                                                                      ContentTemplate="{TemplateBinding AuxiliaryPaneContentTemplate}"
                                                                      ContentTemplateSelector="{TemplateBinding AuxiliaryPaneContentTemplateSelector}" />
                                                </Border>
                                                <Border x:Name="VerticalBorder"
                                                        Grid.Column="1"
                                                        Width="2"
                                                        HorizontalAlignment="Left"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonMenuButton}}, Path=Ribbon.BorderBrush}"
                                                        BorderThickness="1,0,0,0" />
                                                <Border x:Name="VerticalOverlayBorder"
                                                        Grid.Column="1"
                                                        Width="2"
                                                        HorizontalAlignment="Left"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrush}}"
                                                        BorderThickness="1,0,0,0" />
                                            </Grid>

                                            <Border x:Name="FooterBorder"
                                                    Grid.Row="2"
                                                    Background="Transparent"
                                                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonMenuButton}}, Path=Ribbon.BorderBrush}"
                                                    BorderThickness="0,1,0,0"
                                                    CornerRadius="0,0,2,2">
                                                <Border x:Name="FooterBackgroundOverlayBorder"
                                                        Background="{DynamicResource {x:Static BrushKeys.Background}}"
                                                        BorderBrush="Transparent"
                                                        CornerRadius="0,0,2,2">
                                                    <ContentPresenter x:Name="PART_FooterPaneContentPresenter"
                                                                      MinHeight="12"
                                                                      Margin="2"
                                                                      ContentSource="FooterPaneContent"
                                                                      ContentTemplate="{TemplateBinding FooterPaneContentTemplate}"
                                                                      ContentTemplateSelector="{TemplateBinding FooterPaneContentTemplateSelector}" />
                                                </Border>
                                            </Border>
                                            <Border x:Name="FooterOverlayBorder"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    Background="Transparent"
                                                    BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrush}}"
                                                    BorderThickness="0,1,0,0"
                                                    CornerRadius="0,0,2,2" />
                                        </Grid>
                                    </Border>
                                    <Canvas>
                                        <RibbonToggleButton x:Name="PART_PopupToggleButton"
                                                            Canvas.Left="3"
                                                            Canvas.Top="-24"
                                                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                                                            Padding="{TemplateBinding Padding}"
                                                            AutomationProperties.Name="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(AutomationProperties.Name)}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Focusable="False"
                                                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}"
                                                            Label="{TemplateBinding Label}"
                                                            Style="{StaticResource &#234;}" />
                                    </Canvas>
                                </Grid>
                            </classic:SystemDropShadowChrome>
                        </Popup>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" />
                            <Setter TargetName="OverlayRect" Property="Canvas.Top" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OverlayRect" Property="Canvas.Left" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                        <Trigger Property="HasGallery" Value="True">
                            <Setter TargetName="PART_SubMenuScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="PART_SubMenuScrollViewer" Property="VerticalScrollBarVisibility" Value="Disabled" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanUserResizeHorizontally" Value="true" />
                                <Condition Property="CanUserResizeVertically" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeControl" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanUserResizeHorizontally" Value="false" />
                                <Condition Property="CanUserResizeVertically" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeControl" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ResizeThumb" Property="Style" Value="{StaticResource S.Thumb.SizeNs}" />
                        </MultiTrigger>
                        <Trigger Property="IsDropDownPositionedAbove" Value="true">
                            <Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ResizeControl" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownPositionedAbove" Value="true" />
                                <Condition Property="CanUserResizeHorizontally" Value="true" />
                                <Condition Property="CanUserResizeVertically" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeThumb" Property="Style" Value="{StaticResource S.Thumb.SizeNESW.Right}" />
                        </MultiTrigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                            <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shadow" Property="Color" Value="Black" />
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="True">
                            <Setter TargetName="BackgroundCanvas" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                            <Setter TargetName="Shadow" Property="Color" Value="Transparent" />
                            <Setter TargetName="OuterGrid" Property="TextElement.Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                            <Setter TargetName="PopupBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
                            <Setter TargetName="PopupBorder" Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
                            <Setter TargetName="PopupBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="HeaderOverlayBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="HeaderOverlayBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="HeaderOverlayBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="MainPaneBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="PART_SubmenuPlaceholder" Property="Background" Value="Transparent" />
                            <Setter TargetName="VerticalBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
                            <Setter TargetName="VerticalBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="VerticalOverlayBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="FooterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
                            <Setter TargetName="FooterBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="FooterOverlayBorder" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="FooterOverlayBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="FooterBackgroundOverlayBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="FooterBackgroundOverlayBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="ResizeControl" Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
                            <Setter TargetName="ResizeControl" Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>