<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Modules.Project">

    <Style BasedOn="{StaticResource {x:Static h:ListBoxKeys.Default}}"
           TargetType="{x:Type local:ProjectBox}">
        <Setter Property="Projects" Value="{Binding Source={x:Static h:IocProject.Instance}, Path=Collection, Mode=OneWay}" />
        <Setter Property="h:Cattach.ItemHeight" Value="Auto" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{x:Static Commands.Open}"
                                          CommandParameter="{Binding Model}"
                                          Header="打开" />
                                <MenuItem Command="{x:Static Commands.Edit}"
                                          CommandParameter="{Binding Model}"
                                          Header="编辑" />
                                <MenuItem Command="{x:Static Commands.Delete}"
                                          CommandParameter="{Binding Model}"
                                          Header="从列表中删除" />
                                <MenuItem Command="{x:Static Commands.New}"
                                          Header="新建" />
                                <MenuItem Command="{x:Static Commands.Refresh}"
                                          Header="刷新" />
                                <!--<MenuItem Header="将路径复制到剪贴板(_C)"/>
                                <MenuItem Header="固定至列表(_P)"/>
                                <MenuItem Header="清楚已取消固定的文档(_E)"/>-->
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <DockPanel Margin="0,10">
                            <FontIconButton Margin="0"
                                            Command="{x:Static h:Commands.Delete}"
                                            CommandParameter="{Binding Model}"
                                            Content="{x:Static FontIcons.Delete}"
                                            DockPanel.Dock="Right" />
                            <FontIconToggleButton CheckedGlyph="{x:Static FontIcons.Pinned}"
                                                  Command="{x:Static h:Commands.Refresh}"
                                                  DockPanel.Dock="Right"
                                                  IsChecked="{Binding Model.IsFixed}"
                                                  Style="{DynamicResource {x:Static h:FontIconToggleButtonKeys.Switch}}"
                                                  UncheckedGlyph="{x:Static FontIcons.Pin}" />
                            <ContentPresenter Content="{Binding Model}" />
                        </DockPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static h:ListBoxItemKeys.Default}}"
                       TargetType="ListBoxItem">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Margin" Value="1" />
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{local:GetIsCurrentProjectConverter}">
                                    <Binding Path="Model" />
                                    <Binding Path="Current"
                                             Source="{x:Static h:IocProject.Instance}" />
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <!--<Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />-->
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundSelect}}" />
                            <Setter Property="TextElement.FontWeight" Value="Bold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>