<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:H.Styles.Default">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Styles.Default;component/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="ExpanderToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border"
                BorderThickness="0,0,1,0"
                CornerRadius="2,0,0,0">
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.CaptionBackground}}" />
            </Border.Background>
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.BorderBrush}}" />
            </Border.BorderBrush>
            <Grid>
                <Path x:Name="CollapsedArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.CaptionForeground}}" />
                    </Path.Fill>
                </Path>
                <Path x:Name="ExpandededArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 4 L 4 0 L 8 4 Z"
                      Visibility="Collapsed">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.CaptionForeground}}" />
                    </Path.Fill>
                </Path>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{DynamicResource {x:Static ColorKeys.MouseOver}}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{DynamicResource {x:Static ColorKeys.Selected}}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{DynamicResource {x:Static ColorKeys.BackgroundDisabled}}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedArrow"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandededArrow"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Expander.Default,
                                        TypeInTargetAssembly={x:Type local:ExpanderKeys}}"
           TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.CaptionBackground}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.BorderBrush}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow"
                                           Height="0" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Height="{DynamicResource {x:Static LayoutKeys.ItemHeight}}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2,2,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              OverridesDefaultStyle="True"
                                              Template="{StaticResource ExpanderToggleButton}">
                                    <ToggleButton.Background>
                                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.CaptionForeground}}" />
                                    </ToggleButton.Background>
                                </ToggleButton>
                                <ContentPresenter Grid.Column="1"
                                                  Margin="4"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True">
                                    <TextElement.Foreground>
                                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.CaptionForeground}}" />
                                    </TextElement.Foreground>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0,0,2,2">
                            <!--<Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.BorderBrush}}" />
                            </Border.BorderBrush>-->
                            <!--<Border.Background>
                                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Background}}" />
                            </Border.Background>-->
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource {x:Static ColorKeys.BackgroundDisabled}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource {x:Static ColorKeys.BorderBrushDisabled}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource {x:Static local:ExpanderKeys.Default}}"
           TargetType="Expander" />

</ResourceDictionary>