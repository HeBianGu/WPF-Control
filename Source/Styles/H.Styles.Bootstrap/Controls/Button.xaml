<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:H.Styles.Bootstrap">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Styles.Bootstrap;component/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--  Button  -->
    <Style x:Key="{ComponentResourceKey ResourceId=S.Button.Default,
                                        TypeInTargetAssembly={x:Type ButtonKeys}}"
           BasedOn="{StaticResource S.Control.Base}"
           TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Cursor" Value="Hand" />
        <!--<Setter Property="OverridesDefaultStyle" Value="true" />-->
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Margin="2"
                                               Stroke="#60000000"
                                               StrokeDashArray="1 2"
                                               StrokeThickness="1" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.CaptionForeground}}" />
        <Setter Property="Background" Value="LightGreen" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.CaptionBackground}}" />
        <Setter Property="Cattach.CornerRadius" Value="2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="50" />
        <!--  Guide  -->
        <Setter Property="Cattach.UseGuide" Value="True" />
        <Setter Property="Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" />
        <Setter Property="Cattach.GuideData" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ToolTip}" />
        <Setter Property="Cattach.GuideIcon" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Cattach.Icon)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource S.Border.TemplatedParent}"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter RecognizesAccessKey="True"
                                          Style="{StaticResource S.ContentPresenter.TemplatedParent}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrushTitle}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="Pink" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Static ButtonKeys.Default}}"
           TargetType="Button" />
</ResourceDictionary>