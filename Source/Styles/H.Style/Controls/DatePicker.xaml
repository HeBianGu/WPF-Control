<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:H.Styles.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Style;component/Share.xaml" />
        <ResourceDictionary Source="pack://application:,,,/H.Style;component/Controls/Calendar.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style BasedOn="{StaticResource S.Control.Base}"
           TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />-->
        <Setter Property="Height" Value="Auto" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Transparent" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            Style="{StaticResource S.Border.TemplatedParent}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.MouseOver}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Dark0_1}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DropDownButtonStyle"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="MouseOver" />
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundTitle}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundTitle}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#FF448DCA"
                                                        Duration="0" />
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundTitle}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="Background"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundAssist}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetName="Highlight"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.001">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundAssist}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundAssist}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundAssist}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                      Storyboard.TargetName="BackgroundGradient"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                      Duration="00:00:00.001">
                                            <SplineColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource {x:Static ColorKeys.ForegroundAssist}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Width="19"
                              Height="18"
                              Margin="0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Background="Transparent"
                              FlowDirection="LeftToRight">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="20*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23*" />
                                <RowDefinition Height="19*" />
                                <RowDefinition Height="19*" />
                                <RowDefinition Height="19*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Highlight"
                                    Grid.Row="0"
                                    Grid.RowSpan="4"
                                    Grid.ColumnSpan="4"
                                    Margin="-1"
                                    BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrushTitle}}"
                                    BorderThickness="1"
                                    CornerRadius="0,0,1,1"
                                    Opacity="1">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
                                </Border.Background>
                            </Border>
                            <Border x:Name="Background"
                                    Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Grid.ColumnSpan="4"
                                    Margin="0,-1,0,0"
                                    BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrushTitle}}"
                                    BorderThickness="1"
                                    CornerRadius=".5"
                                    Opacity="1">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
                                </Border.Background>
                            </Border>
                            <Border x:Name="BackgroundGradient"
                                    Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Grid.ColumnSpan="4"
                                    Margin="0,-1,0,0"
                                    BorderBrush="{DynamicResource {x:Static BrushKeys.BorderBrushTitle}}"
                                    BorderThickness="1"
                                    CornerRadius=".5"
                                    Opacity="1">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
                                </Border.Background>
                            </Border>
                            <Rectangle Grid.RowSpan="1"
                                       Grid.ColumnSpan="4"
                                       StrokeThickness="1">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Background}}" />
                                </Rectangle.Fill>
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.BorderBrush}}" />
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Path Grid.Row="1"
                                  Grid.RowSpan="3"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="4"
                                  Margin="4,3,4,3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M11.426758,8.4305077 L11.749023,8.4305077                      L11.749023,16.331387 L10.674805,16.331387                      L10.674805,10.299648 L9.0742188,11.298672                     L9.0742188,10.294277 C9.4788408,10.090176                      9.9094238,9.8090878 10.365967,9.4510155                      C10.82251,9.0929432 11.176106,8.7527733                      11.426758,8.4305077 z M14.65086,8.4305077                      L18.566387,8.4305077 L18.566387,9.3435936                      L15.671368,9.3435936 L15.671368,11.255703                      C15.936341,11.058764 16.27293,10.960293                      16.681133,10.960293 C17.411602,10.960293                      17.969301,11.178717 18.354229,11.615566                      C18.739157,12.052416 18.931622,12.673672                     18.931622,13.479336 C18.931622,15.452317                      18.052553,16.438808 16.294415,16.438808                     C15.560365,16.438808 14.951641,16.234707                      14.468243,15.826504 L14.881817,14.929531                     C15.368796,15.326992 15.837872,15.525723                      16.289043,15.525723 C17.298809,15.525723                      17.803692,14.895514 17.803692,13.635098                      C17.803692,12.460618 17.305971,11.873379                      16.310528,11.873379 C15.83071,11.873379                      15.399232,12.079271 15.016094,12.491055                     L14.65086,12.238613 z"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Background}}" />
                                </Path.Fill>
                            </Path>
                            <Ellipse Grid.ColumnSpan="4"
                                     Width="3"
                                     Height="3"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     StrokeThickness="0">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <Border x:Name="DisabledVisual"
                                    Grid.Row="0"
                                    Grid.RowSpan="4"
                                    Grid.ColumnSpan="4"
                                    BorderThickness="1"
                                    CornerRadius="0,0,.5,.5"
                                    Opacity="0">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Background}}" />
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.DatePicker.Default,
                                        TypeInTargetAssembly={x:Type local:DatePickerKeys}}"
           BasedOn="{StaticResource S.Control.Base}"
           TargetType="{x:Type DatePicker}">
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Long" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <!--  Set CalendarStyle to DatePickerCalendarStyle.  -->
        <Setter Property="CalendarStyle" Value="{StaticResource {x:Type Calendar}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border Style="{StaticResource S.Border.TemplatedParent}">
                        <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="2,0,2,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource DropDownButtonStyle}" />
                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Row="0"
                                               Grid.Column="0"
                                               Padding="{TemplateBinding Padding}"
                                               HorizontalContentAlignment="Stretch"
                                               Focusable="{TemplateBinding Focusable}"
                                               Foreground="{TemplateBinding Foreground}" />
                            <!--<Grid x:Name="PART_DisabledVisual"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  IsHitTestVisible="False"
                                  Opacity="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Row="0"
                                           Grid.Column="0"
                                           RadiusX="1"
                                           RadiusY="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.BorderBrush}}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Row="0"
                                           Grid.Column="1"
                                           Width="19"
                                           Height="18"
                                           Margin="2,0,2,0"
                                           RadiusX="1"
                                           RadiusY="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Foreground}}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>-->
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_TextBox}"
                                   StaysOpen="False" />
                        </Grid>
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource {x:Static local:DatePickerKeys.Default}}"
           TargetType="DatePicker" />

</ResourceDictionary>