<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Styles.Controls"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="{ComponentResourceKey ResourceId=S.Border.Default,
                                        TypeInTargetAssembly={x:Type local:BorderKeys}}"
           TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Background}}" />
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Border.Effect,
                                        TypeInTargetAssembly={x:Type local:BorderKeys}}"
           BasedOn="{StaticResource {x:Static local:BorderKeys.Default}}"
           TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect po:Freeze="True"
                                  BlurRadius="5"
                                  Direction="270"
                                  Opacity=".42"
                                  RenderingBias="Performance"
                                  ShadowDepth="1"
                                  Color="{DynamicResource {x:Static h:ColorKeys.BorderBrush}}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect po:Freeze="True"
                                          BlurRadius="8"
                                          Direction="270"
                                          Opacity=".42"
                                          RenderingBias="Performance"
                                          ShadowDepth="1.5"
                                          Color="{DynamicResource {x:Static h:ColorKeys.BorderBrushTitle}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Border.BorderThickness,
                                        TypeInTargetAssembly={x:Type local:BorderKeys}}"
           BasedOn="{StaticResource {x:Static local:BorderKeys.Default}}"
           TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Border.BorderBrush,
                                        TypeInTargetAssembly={x:Type local:BorderKeys}}"
           BasedOn="{StaticResource {x:Static local:BorderKeys.Default}}"
           TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.Border.Background,
                                        TypeInTargetAssembly={x:Type local:BorderKeys}}"
           BasedOn="{StaticResource {x:Static local:BorderKeys.Default}}"
           TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
