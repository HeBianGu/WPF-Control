<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:H.Styles.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Style;component/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBox.Default,
                                        TypeInTargetAssembly={x:Type local:TextBoxKeys}}"
           BasedOn="{StaticResource S.Control.Base}"
           TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="MinWidth" Value="120" />-->
        <!--<Setter Property="MinHeight" Value="20" />-->
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Cattach.CornerRadius" Value="2" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static LayoutKeys.ItemHeight}}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
        <!--<Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Background}}" />
            </Setter.Value>
        </Setter>-->
        <Setter Property="Background" Value="{DynamicResource {x:Static BrushKeys.Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
        <!--  Guide  -->
        <Setter Property="Cattach.UseGuide" Value="True" />
        <Setter Property="Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ToolTip}" />
        <Setter Property="Cattach.GuideData" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ToolTip}" />
        <Setter Property="Cattach.GuideIcon" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Cattach.Icon)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Style="{StaticResource S.Border.TemplatedParent}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource {x:Static BrushKeys.Red}}"
                            BorderThickness="1"
                            CornerRadius="2"
                            IsHitTestVisible="False"
                            ToolTipService.InitialShowDelay="0"
                            ToolTipService.ShowOnDisabled="True">
                        <Border.ToolTip>
                            <ToolTip Background="{DynamicResource {x:Static BrushKeys.Red}}"
                                     BorderBrush="{x:Null}"
                                     Content="{Binding [0].ErrorContent}"
                                     Foreground="{DynamicResource {x:Static BrushKeys.White}}" />
                        </Border.ToolTip>
                        <AdornedElementPlaceholder Margin="-4" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Validation.Errors)[0].ErrorContent}" />-->
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.MouseOver}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrushTitle}}" />

            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.ForegroundAssist}}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static BrushKeys.Foreground}}" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Dark0_1}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBox.Edit,
                                        TypeInTargetAssembly={x:Type local:TextBoxKeys}}"
           BasedOn="{StaticResource {x:Static local:TextBoxKeys.Default}}"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinHeight" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBox.Attach,
                                        TypeInTargetAssembly={x:Type local:TextBoxKeys}}"
           BasedOn="{StaticResource {x:Static local:TextBoxKeys.Default}}"
           TargetType="{x:Type TextBox}">
        <Setter Property="Cattach.TitleForeground" Value="{DynamicResource {x:Static BrushKeys.CaptionForeground}}" />
        <Setter Property="Cattach.TitleBackground" Value="{DynamicResource {x:Static BrushKeys.CaptionBackground}}" />
        <Setter Property="Cattach.TitleWidth" Value="Auto" />
        <Setter Property="Cattach.TitleMinWidth" Value="Auto" />
        <Setter Property="Cattach.TitleHeight" Value="Auto" />
        <Setter Property="Cattach.TitleBorderBrush" Value="{x:Null}" />
        <Setter Property="Cattach.TitleBorderThickness" Value="1" />
        <Setter Property="Cattach.TitleCornerRaius" Value="2 0 0 2" />
        <Setter Property="Cattach.TitleFontSize" Value="{DynamicResource {x:Static FontSizeKeys.Default}}" />
        <Setter Property="Cattach.TitleHorizontalAlignment" Value="Stretch" />
        <Setter Property="Cattach.TitleVerticalAlignment" Value="Center" />
        <Setter Property="Cattach.TitleTemplate" Value="{x:Null}" />
        <Setter Property="Cattach.TitleMargin" Value="5 0" />

        <Setter Property="Cattach.AttachForeground" Value="{x:Null}" />
        <Setter Property="Cattach.AttachBackground" Value="{x:Null}" />
        <Setter Property="Cattach.AttachWidth" Value="Auto" />
        <Setter Property="Cattach.AttachHeight" Value="Auto" />
        <Setter Property="Cattach.AttachBorderBrush" Value="{x:Null}" />
        <Setter Property="Cattach.AttachBorderThickness" Value="1" />
        <Setter Property="Cattach.AttachCornerRaius" Value="0 2 2 0" />
        <Setter Property="Cattach.AttachHorizontalAlignment" Value="Stretch" />
        <Setter Property="Cattach.AttachVerticalAlignment" Value="Stretch" />
        <Setter Property="Cattach.AttachTemplate" Value="{x:Null}" />
        <Setter Property="Cattach.AttachMargin" Value="0" />
        <Setter Property="Cattach.AttachDock" Value="Right" />

        <Setter Property="Cattach.IconForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}" />
        <Setter Property="Cattach.IconMargin" Value="2 10 0 10" />
        <Setter Property="Cattach.IconSize" Value="{DynamicResource {x:Static FontSizeKeys.Default}}" />
        <Setter Property="Cattach.IconHorizontalAlignment" Value="Stretch" />
        <Setter Property="Cattach.IconVerticalAlignment" Value="Center" />
        <Setter Property="Cattach.IconOpacity" Value="1.0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Style="{StaticResource S.Border.TemplatedParent}">
                        <DockPanel>
                            <Border Style="{StaticResource S.Border.Title}">
                                <ContentPresenter Style="{StaticResource S.ContentPresenter.Title}" />
                            </Border>
                            <Path Style="{StaticResource S.Path.Icon.Cattachable}" />
                            <Border Style="{StaticResource S.Border.Attach}">
                                <ContentPresenter Style="{StaticResource S.ContentPresenter.Attach}" />
                            </Border>
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <Control Template="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(Cattach.CenterTemplate)}" />
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cattach.CenterTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter x:Name="c"
                                      Margin="5,0"
                                      VerticalAlignment="Center"
                                      Content="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(Cattach.Watermark)}"
                                      IsHitTestVisible="False"
                                      Opacity="0.5"
                                      Visibility="Collapsed" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=Text}"
                                     Value="">
                            <Setter TargetName="c" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=Text}"
                                     Value="{x:Null}">
                            <Setter TargetName="c" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TextBox.Delete,
                                        TypeInTargetAssembly={x:Type local:TextBoxKeys}}"
           BasedOn="{StaticResource {x:Static local:TextBoxKeys.Attach}}"
           TargetType="{x:Type TextBox}">
        <Setter Property="local:DeleteTextTextBoxCommand.Text" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Cattach.Attach">
            <Setter.Value>
                <Button Height="Auto"
                        Margin="1"
                        Command="{local:DeleteTextTextBoxCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"
                        Content="删除" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Static local:TextBoxKeys.Default}}"
           TargetType="TextBox" />
</ResourceDictionary>