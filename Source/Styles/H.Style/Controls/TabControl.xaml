<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:H.Styles.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/H.Style;component/Share.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="{ComponentResourceKey ResourceId=S.TabControl.Default,
                                        TypeInTargetAssembly={x:Type local:TabControlKeys}}"
           TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cattach.CaptionHorizontalAlignment" Value="Stretch" />
        <Setter Property="Cattach.CaptionVerticalAlignment" Value="Center" />
        <Setter Property="Cattach.CaptionHeight" Value="{DynamicResource {x:Static LayoutKeys.ItemHeight}}" />
        <Setter Property="Cattach.CaptionBorderBrush" Value="{x:Null}" />
        <Setter Property="Cattach.CaptionBackground" Value="Transparent" />
        <Setter Property="Cattach.CaptionBorderThickness" Value="0" />
        <Setter Property="Cattach.CaptionMargin" Value="5 0" />
        <Setter Property="Cattach.CaptionCornerRadius" Value="2" />
        <!--  Guide  -->
        <!--
        <Setter Property="Cattach.UseGuide" Value="True" />
        <Setter Property="Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
        <Setter Property="Cattach.GuideData" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ToolTip}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border Style="{StaticResource S.Border.TemplatedParent}">
                        <Grid ClipToBounds="true"
                              KeyboardNavigation.TabNavigation="Local"
                              SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1"
                                                  Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0"
                                               Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1"
                                               Height="*" />
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="headerPanel"
                                          Margin="0,0,0,1"
                                          VerticalScrollBarVisibility="Auto">
                                <TabPanel Grid.Row="0"
                                          Grid.Column="0"
                                          Panel.ZIndex="1"
                                          Background="Transparent"
                                          IsItemsHost="true"
                                          KeyboardNavigation.TabIndex="1" />
                            </ScrollViewer>

                            <Border x:Name="contentPanel"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <!--  Foreground继承,不从TabItem继承，TabItem选中为高亮  -->
                                <ContentControl x:Name="PART_SelectedContentHost"
                                                Margin="{TemplateBinding Padding}"
                                                Content="{TemplateBinding SelectedContent}"
                                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                Foreground="{TemplateBinding Foreground}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--<ContentPresenter
x:Name="PART_SelectedContentHost"
Margin="{TemplateBinding Padding}"
ContentSource="SelectedContent"
SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Default,
                                        TypeInTargetAssembly={x:Type local:TabItemKeys}}"
           BasedOn="{StaticResource S.Control.Base}"
           TargetType="{x:Type TabItem}">
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionHeight)}" />
        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionMargin)}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionBackground)}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Cattach.CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionCornerRadius)}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionBorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionBorderThickness)}" />
        <Setter Property="Cattach.CaptionHorizontalAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionHorizontalAlignment)}" />
        <Setter Property="Cattach.CaptionVerticalAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=(Cattach.CaptionVerticalAlignment)}" />
        <!--  Guide  -->
        <Setter Property="Cattach.UseGuide" Value="True" />
        <Setter Property="Cattach.GuideTitle" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Header}" />
        <Setter Property="Cattach.GuideData" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Style="{StaticResource S.Border.TemplatedParent}">
                            <ContentPresenter x:Name="ContentSite"
                                              HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(Cattach.CaptionHorizontalAlignment)}"
                                              VerticalAlignment="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(Cattach.CaptionVerticalAlignment)}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              Style="{StaticResource S.ContentPresenter.TemplatedParent}" />
                        </Border>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.ForegroundSelect}}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.MouseOver}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrushTitle}}" />
            </MultiTrigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.ForegroundSelect}}" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.ForegroundSelect}}" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>-->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Panel.ZIndex" Value="100" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.Selected}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static ColorKeys.ForegroundSelect}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TabItem.Line,
                                        TypeInTargetAssembly={x:Type local:TabItemKeys}}"
           BasedOn="{StaticResource {x:Static local:TabItemKeys.Default}}"
           TargetType="{x:Type TabItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.BorderBrush}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}"
                         Value="Top">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="Cattach.CornerRadius" Value="2,2,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}"
                         Value="Bottom">
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="Cattach.CornerRadius" Value="0,0,2,2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}"
                         Value="Left">
                <Setter Property="BorderThickness" Value="0,0,1,0" />
                <Setter Property="Cattach.CornerRadius" Value="2,0,0,2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=TabStripPlacement}"
                         Value="Right">
                <Setter Property="BorderThickness" Value="1,0,0,0" />
                <Setter Property="Cattach.CornerRadius" Value="0,2,2,0" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static BrushKeys.ForegroundSelect}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource {x:Static local:TabControlKeys.Default}}"
           TargetType="TabControl" />
    <Style BasedOn="{StaticResource {x:Static local:TabItemKeys.Default}}"
           TargetType="TabItem" />

</ResourceDictionary>